#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PROYECTOSGEOMATICA")]
public partial class AccesoDatosDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Definiciones de métodos de extensibilidad
  partial void OnCreated();
  partial void InsertProductos(Productos instance);
  partial void UpdateProductos(Productos instance);
  partial void DeleteProductos(Productos instance);
  partial void InsertTipo_Acta(Tipo_Acta instance);
  partial void UpdateTipo_Acta(Tipo_Acta instance);
  partial void DeleteTipo_Acta(Tipo_Acta instance);
  partial void InsertTipo_Adicion(Tipo_Adicion instance);
  partial void UpdateTipo_Adicion(Tipo_Adicion instance);
  partial void DeleteTipo_Adicion(Tipo_Adicion instance);
  partial void InsertTipo_Contrato_Convenio(Tipo_Contrato_Convenio instance);
  partial void UpdateTipo_Contrato_Convenio(Tipo_Contrato_Convenio instance);
  partial void DeleteTipo_Contrato_Convenio(Tipo_Contrato_Convenio instance);
  partial void Insertimagenes(imagenes instance);
  partial void Updateimagenes(imagenes instance);
  partial void Deleteimagenes(imagenes instance);
  partial void InsertUsuarios(Usuarios instance);
  partial void UpdateUsuarios(Usuarios instance);
  partial void DeleteUsuarios(Usuarios instance);
  partial void InsertRol(Rol instance);
  partial void UpdateRol(Rol instance);
  partial void DeleteRol(Rol instance);
  partial void InsertProyectos(Proyectos instance);
  partial void UpdateProyectos(Proyectos instance);
  partial void DeleteProyectos(Proyectos instance);
  partial void InsertEstado_Contrato(Estado_Contrato instance);
  partial void UpdateEstado_Contrato(Estado_Contrato instance);
  partial void DeleteEstado_Contrato(Estado_Contrato instance);
  partial void InsertParticipantes(Participantes instance);
  partial void UpdateParticipantes(Participantes instance);
  partial void DeleteParticipantes(Participantes instance);
  partial void InsertRoles_Colaboradores(Roles_Colaboradores instance);
  partial void UpdateRoles_Colaboradores(Roles_Colaboradores instance);
  partial void DeleteRoles_Colaboradores(Roles_Colaboradores instance);
  partial void InsertTipo_Compromiso_Academico(Tipo_Compromiso_Academico instance);
  partial void UpdateTipo_Compromiso_Academico(Tipo_Compromiso_Academico instance);
  partial void DeleteTipo_Compromiso_Academico(Tipo_Compromiso_Academico instance);
  partial void InsertCompromisos_Academicos(Compromisos_Academicos instance);
  partial void UpdateCompromisos_Academicos(Compromisos_Academicos instance);
  partial void DeleteCompromisos_Academicos(Compromisos_Academicos instance);
  partial void InsertActas(Actas instance);
  partial void UpdateActas(Actas instance);
  partial void DeleteActas(Actas instance);
  partial void InsertOtrosí_Adiciones(Otrosí_Adiciones instance);
  partial void UpdateOtrosí_Adiciones(Otrosí_Adiciones instance);
  partial void DeleteOtrosí_Adiciones(Otrosí_Adiciones instance);
  partial void InsertColaboradores(Colaboradores instance);
  partial void UpdateColaboradores(Colaboradores instance);
  partial void DeleteColaboradores(Colaboradores instance);
  partial void InsertInforme_CompromisosAcademicos(Informe_CompromisosAcademicos instance);
  partial void UpdateInforme_CompromisosAcademicos(Informe_CompromisosAcademicos instance);
  partial void DeleteInforme_CompromisosAcademicos(Informe_CompromisosAcademicos instance);
  partial void InsertAutores_Compromisos(Autores_Compromisos instance);
  partial void UpdateAutores_Compromisos(Autores_Compromisos instance);
  partial void DeleteAutores_Compromisos(Autores_Compromisos instance);
  partial void InsertEntidad_Contratante(Entidad_Contratante instance);
  partial void UpdateEntidad_Contratante(Entidad_Contratante instance);
  partial void DeleteEntidad_Contratante(Entidad_Contratante instance);
  partial void InsertTipo_Producto(Tipo_Producto instance);
  partial void UpdateTipo_Producto(Tipo_Producto instance);
  partial void DeleteTipo_Producto(Tipo_Producto instance);
  partial void InsertContrato_Convenio(Contrato_Convenio instance);
  partial void UpdateContrato_Convenio(Contrato_Convenio instance);
  partial void DeleteContrato_Convenio(Contrato_Convenio instance);
  #endregion
	
	public AccesoDatosDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PROYECTOSGEOMATICAConnectionString1"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public AccesoDatosDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public AccesoDatosDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public AccesoDatosDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public AccesoDatosDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Productos> Productos
	{
		get
		{
			return this.GetTable<Productos>();
		}
	}
	
	public System.Data.Linq.Table<Tipo_Acta> Tipo_Acta
	{
		get
		{
			return this.GetTable<Tipo_Acta>();
		}
	}
	
	public System.Data.Linq.Table<Tipo_Adicion> Tipo_Adicion
	{
		get
		{
			return this.GetTable<Tipo_Adicion>();
		}
	}
	
	public System.Data.Linq.Table<Tipo_Contrato_Convenio> Tipo_Contrato_Convenio
	{
		get
		{
			return this.GetTable<Tipo_Contrato_Convenio>();
		}
	}
	
	public System.Data.Linq.Table<imagenes> imagenes
	{
		get
		{
			return this.GetTable<imagenes>();
		}
	}
	
	public System.Data.Linq.Table<Usuarios> Usuarios
	{
		get
		{
			return this.GetTable<Usuarios>();
		}
	}
	
	public System.Data.Linq.Table<Rol> Rol
	{
		get
		{
			return this.GetTable<Rol>();
		}
	}
	
	public System.Data.Linq.Table<Proyectos> Proyectos
	{
		get
		{
			return this.GetTable<Proyectos>();
		}
	}
	
	public System.Data.Linq.Table<Estado_Contrato> Estado_Contrato
	{
		get
		{
			return this.GetTable<Estado_Contrato>();
		}
	}
	
	public System.Data.Linq.Table<Participantes> Participantes
	{
		get
		{
			return this.GetTable<Participantes>();
		}
	}
	
	public System.Data.Linq.Table<Roles_Colaboradores> Roles_Colaboradores
	{
		get
		{
			return this.GetTable<Roles_Colaboradores>();
		}
	}
	
	public System.Data.Linq.Table<Tipo_Compromiso_Academico> Tipo_Compromiso_Academico
	{
		get
		{
			return this.GetTable<Tipo_Compromiso_Academico>();
		}
	}
	
	public System.Data.Linq.Table<Compromisos_Academicos> Compromisos_Academicos
	{
		get
		{
			return this.GetTable<Compromisos_Academicos>();
		}
	}
	
	public System.Data.Linq.Table<Actas> Actas
	{
		get
		{
			return this.GetTable<Actas>();
		}
	}
	
	public System.Data.Linq.Table<Otrosí_Adiciones> Otrosí_Adiciones
	{
		get
		{
			return this.GetTable<Otrosí_Adiciones>();
		}
	}
	
	public System.Data.Linq.Table<Colaboradores> Colaboradores
	{
		get
		{
			return this.GetTable<Colaboradores>();
		}
	}
	
	public System.Data.Linq.Table<Informe_CompromisosAcademicos> Informe_CompromisosAcademicos
	{
		get
		{
			return this.GetTable<Informe_CompromisosAcademicos>();
		}
	}
	
	public System.Data.Linq.Table<Autores_Compromisos> Autores_Compromisos
	{
		get
		{
			return this.GetTable<Autores_Compromisos>();
		}
	}
	
	public System.Data.Linq.Table<Entidad_Contratante> Entidad_Contratante
	{
		get
		{
			return this.GetTable<Entidad_Contratante>();
		}
	}
	
	public System.Data.Linq.Table<Tipo_Producto> Tipo_Producto
	{
		get
		{
			return this.GetTable<Tipo_Producto>();
		}
	}
	
	public System.Data.Linq.Table<Contrato_Convenio> Contrato_Convenio
	{
		get
		{
			return this.GetTable<Contrato_Convenio>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Productos")]
public partial class Productos : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id_Productos;
	
	private int _Id_Proyectos;
	
	private string _Nombre_Producto;
	
	private string _Descripción_Producto;
	
	private string _Archivo;
	
	private System.Nullable<int> _Id_TipoProducto;
	
	private EntitySet<Participantes> _Participantes;
	
	private EntitySet<Tipo_Producto> _Tipo_Producto;
	
	private EntityRef<Proyectos> _Proyectos;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ProductosChanging(int value);
    partial void OnId_ProductosChanged();
    partial void OnId_ProyectosChanging(int value);
    partial void OnId_ProyectosChanged();
    partial void OnNombre_ProductoChanging(string value);
    partial void OnNombre_ProductoChanged();
    partial void OnDescripción_ProductoChanging(string value);
    partial void OnDescripción_ProductoChanged();
    partial void OnArchivoChanging(string value);
    partial void OnArchivoChanged();
    partial void OnId_TipoProductoChanging(System.Nullable<int> value);
    partial void OnId_TipoProductoChanged();
    #endregion
	
	public Productos()
	{
		this._Participantes = new EntitySet<Participantes>(new Action<Participantes>(this.attach_Participantes), new Action<Participantes>(this.detach_Participantes));
		this._Tipo_Producto = new EntitySet<Tipo_Producto>(new Action<Tipo_Producto>(this.attach_Tipo_Producto), new Action<Tipo_Producto>(this.detach_Tipo_Producto));
		this._Proyectos = default(EntityRef<Proyectos>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Productos", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id_Productos
	{
		get
		{
			return this._Id_Productos;
		}
		set
		{
			if ((this._Id_Productos != value))
			{
				this.OnId_ProductosChanging(value);
				this.SendPropertyChanging();
				this._Id_Productos = value;
				this.SendPropertyChanged("Id_Productos");
				this.OnId_ProductosChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Proyectos", DbType="Int NOT NULL")]
	public int Id_Proyectos
	{
		get
		{
			return this._Id_Proyectos;
		}
		set
		{
			if ((this._Id_Proyectos != value))
			{
				if (this._Proyectos.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnId_ProyectosChanging(value);
				this.SendPropertyChanging();
				this._Id_Proyectos = value;
				this.SendPropertyChanged("Id_Proyectos");
				this.OnId_ProyectosChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre_Producto", DbType="VarChar(MAX)")]
	public string Nombre_Producto
	{
		get
		{
			return this._Nombre_Producto;
		}
		set
		{
			if ((this._Nombre_Producto != value))
			{
				this.OnNombre_ProductoChanging(value);
				this.SendPropertyChanging();
				this._Nombre_Producto = value;
				this.SendPropertyChanged("Nombre_Producto");
				this.OnNombre_ProductoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripción_Producto", DbType="VarChar(MAX)")]
	public string Descripción_Producto
	{
		get
		{
			return this._Descripción_Producto;
		}
		set
		{
			if ((this._Descripción_Producto != value))
			{
				this.OnDescripción_ProductoChanging(value);
				this.SendPropertyChanging();
				this._Descripción_Producto = value;
				this.SendPropertyChanged("Descripción_Producto");
				this.OnDescripción_ProductoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archivo", DbType="VarChar(MAX)")]
	public string Archivo
	{
		get
		{
			return this._Archivo;
		}
		set
		{
			if ((this._Archivo != value))
			{
				this.OnArchivoChanging(value);
				this.SendPropertyChanging();
				this._Archivo = value;
				this.SendPropertyChanged("Archivo");
				this.OnArchivoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_TipoProducto", DbType="Int")]
	public System.Nullable<int> Id_TipoProducto
	{
		get
		{
			return this._Id_TipoProducto;
		}
		set
		{
			if ((this._Id_TipoProducto != value))
			{
				this.OnId_TipoProductoChanging(value);
				this.SendPropertyChanging();
				this._Id_TipoProducto = value;
				this.SendPropertyChanged("Id_TipoProducto");
				this.OnId_TipoProductoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Productos_Participantes", Storage="_Participantes", ThisKey="Id_Productos", OtherKey="Productos_Id")]
	public EntitySet<Participantes> Participantes
	{
		get
		{
			return this._Participantes;
		}
		set
		{
			this._Participantes.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Productos_Tipo_Producto", Storage="_Tipo_Producto", ThisKey="Id_Productos", OtherKey="Id_TipoProducto")]
	public EntitySet<Tipo_Producto> Tipo_Producto
	{
		get
		{
			return this._Tipo_Producto;
		}
		set
		{
			this._Tipo_Producto.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proyectos_Productos", Storage="_Proyectos", ThisKey="Id_Proyectos", OtherKey="Id_Proyecto", IsForeignKey=true)]
	public Proyectos Proyectos
	{
		get
		{
			return this._Proyectos.Entity;
		}
		set
		{
			Proyectos previousValue = this._Proyectos.Entity;
			if (((previousValue != value) 
						|| (this._Proyectos.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Proyectos.Entity = null;
					previousValue.Productos.Remove(this);
				}
				this._Proyectos.Entity = value;
				if ((value != null))
				{
					value.Productos.Add(this);
					this._Id_Proyectos = value.Id_Proyecto;
				}
				else
				{
					this._Id_Proyectos = default(int);
				}
				this.SendPropertyChanged("Proyectos");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Participantes(Participantes entity)
	{
		this.SendPropertyChanging();
		entity.Productos = this;
	}
	
	private void detach_Participantes(Participantes entity)
	{
		this.SendPropertyChanging();
		entity.Productos = null;
	}
	
	private void attach_Tipo_Producto(Tipo_Producto entity)
	{
		this.SendPropertyChanging();
		entity.Productos = this;
	}
	
	private void detach_Tipo_Producto(Tipo_Producto entity)
	{
		this.SendPropertyChanging();
		entity.Productos = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tipo_Acta")]
public partial class Tipo_Acta : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id_Tipo_Acta;
	
	private string _Tipo_Acta1;
	
	private EntitySet<Actas> _Actas;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_Tipo_ActaChanging(int value);
    partial void OnId_Tipo_ActaChanged();
    partial void OnTipo_Acta1Changing(string value);
    partial void OnTipo_Acta1Changed();
    #endregion
	
	public Tipo_Acta()
	{
		this._Actas = new EntitySet<Actas>(new Action<Actas>(this.attach_Actas), new Action<Actas>(this.detach_Actas));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Tipo_Acta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id_Tipo_Acta
	{
		get
		{
			return this._Id_Tipo_Acta;
		}
		set
		{
			if ((this._Id_Tipo_Acta != value))
			{
				this.OnId_Tipo_ActaChanging(value);
				this.SendPropertyChanging();
				this._Id_Tipo_Acta = value;
				this.SendPropertyChanged("Id_Tipo_Acta");
				this.OnId_Tipo_ActaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Tipo_Acta", Storage="_Tipo_Acta1", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Tipo_Acta1
	{
		get
		{
			return this._Tipo_Acta1;
		}
		set
		{
			if ((this._Tipo_Acta1 != value))
			{
				this.OnTipo_Acta1Changing(value);
				this.SendPropertyChanging();
				this._Tipo_Acta1 = value;
				this.SendPropertyChanged("Tipo_Acta1");
				this.OnTipo_Acta1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Acta_Actas", Storage="_Actas", ThisKey="Id_Tipo_Acta", OtherKey="Tipo_Acta")]
	public EntitySet<Actas> Actas
	{
		get
		{
			return this._Actas;
		}
		set
		{
			this._Actas.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Actas(Actas entity)
	{
		this.SendPropertyChanging();
		entity.Tipo_Acta1 = this;
	}
	
	private void detach_Actas(Actas entity)
	{
		this.SendPropertyChanging();
		entity.Tipo_Acta1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tipo_Adicion")]
public partial class Tipo_Adicion : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id_Adicion;
	
	private string _Tipo_Adicion1;
	
	private EntitySet<Otrosí_Adiciones> _Otrosí_Adiciones;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_AdicionChanging(int value);
    partial void OnId_AdicionChanged();
    partial void OnTipo_Adicion1Changing(string value);
    partial void OnTipo_Adicion1Changed();
    #endregion
	
	public Tipo_Adicion()
	{
		this._Otrosí_Adiciones = new EntitySet<Otrosí_Adiciones>(new Action<Otrosí_Adiciones>(this.attach_Otrosí_Adiciones), new Action<Otrosí_Adiciones>(this.detach_Otrosí_Adiciones));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Adicion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id_Adicion
	{
		get
		{
			return this._Id_Adicion;
		}
		set
		{
			if ((this._Id_Adicion != value))
			{
				this.OnId_AdicionChanging(value);
				this.SendPropertyChanging();
				this._Id_Adicion = value;
				this.SendPropertyChanged("Id_Adicion");
				this.OnId_AdicionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Tipo_Adicion", Storage="_Tipo_Adicion1", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Tipo_Adicion1
	{
		get
		{
			return this._Tipo_Adicion1;
		}
		set
		{
			if ((this._Tipo_Adicion1 != value))
			{
				this.OnTipo_Adicion1Changing(value);
				this.SendPropertyChanging();
				this._Tipo_Adicion1 = value;
				this.SendPropertyChanged("Tipo_Adicion1");
				this.OnTipo_Adicion1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Adicion_Otrosí_Adiciones", Storage="_Otrosí_Adiciones", ThisKey="Id_Adicion", OtherKey="Tipo_Otrosi_Adición")]
	public EntitySet<Otrosí_Adiciones> Otrosí_Adiciones
	{
		get
		{
			return this._Otrosí_Adiciones;
		}
		set
		{
			this._Otrosí_Adiciones.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Otrosí_Adiciones(Otrosí_Adiciones entity)
	{
		this.SendPropertyChanging();
		entity.Tipo_Adicion = this;
	}
	
	private void detach_Otrosí_Adiciones(Otrosí_Adiciones entity)
	{
		this.SendPropertyChanging();
		entity.Tipo_Adicion = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tipo_Contrato_Convenio")]
public partial class Tipo_Contrato_Convenio : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id_Tipo_Convenio_Contrato;
	
	private string _Tipo_Convenio_Contrato;
	
	private EntitySet<Contrato_Convenio> _Contrato_Convenio;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_Tipo_Convenio_ContratoChanging(int value);
    partial void OnId_Tipo_Convenio_ContratoChanged();
    partial void OnTipo_Convenio_ContratoChanging(string value);
    partial void OnTipo_Convenio_ContratoChanged();
    #endregion
	
	public Tipo_Contrato_Convenio()
	{
		this._Contrato_Convenio = new EntitySet<Contrato_Convenio>(new Action<Contrato_Convenio>(this.attach_Contrato_Convenio), new Action<Contrato_Convenio>(this.detach_Contrato_Convenio));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Tipo_Convenio_Contrato", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id_Tipo_Convenio_Contrato
	{
		get
		{
			return this._Id_Tipo_Convenio_Contrato;
		}
		set
		{
			if ((this._Id_Tipo_Convenio_Contrato != value))
			{
				this.OnId_Tipo_Convenio_ContratoChanging(value);
				this.SendPropertyChanging();
				this._Id_Tipo_Convenio_Contrato = value;
				this.SendPropertyChanged("Id_Tipo_Convenio_Contrato");
				this.OnId_Tipo_Convenio_ContratoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo_Convenio_Contrato", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Tipo_Convenio_Contrato
	{
		get
		{
			return this._Tipo_Convenio_Contrato;
		}
		set
		{
			if ((this._Tipo_Convenio_Contrato != value))
			{
				this.OnTipo_Convenio_ContratoChanging(value);
				this.SendPropertyChanging();
				this._Tipo_Convenio_Contrato = value;
				this.SendPropertyChanged("Tipo_Convenio_Contrato");
				this.OnTipo_Convenio_ContratoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Contrato_Convenio_Contrato_Convenio", Storage="_Contrato_Convenio", ThisKey="Id_Tipo_Convenio_Contrato", OtherKey="Tipo")]
	public EntitySet<Contrato_Convenio> Contrato_Convenio
	{
		get
		{
			return this._Contrato_Convenio;
		}
		set
		{
			this._Contrato_Convenio.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Contrato_Convenio(Contrato_Convenio entity)
	{
		this.SendPropertyChanging();
		entity.Tipo_Contrato_Convenio = this;
	}
	
	private void detach_Contrato_Convenio(Contrato_Convenio entity)
	{
		this.SendPropertyChanging();
		entity.Tipo_Contrato_Convenio = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.imagenes")]
public partial class imagenes : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private System.Data.Linq.Binary _image;
	
	private string _coordenadasX;
	
	private string _coordenadasY;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnimageChanging(System.Data.Linq.Binary value);
    partial void OnimageChanged();
    partial void OncoordenadasXChanging(string value);
    partial void OncoordenadasXChanged();
    partial void OncoordenadasYChanging(string value);
    partial void OncoordenadasYChanged();
    #endregion
	
	public imagenes()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary image
	{
		get
		{
			return this._image;
		}
		set
		{
			if ((this._image != value))
			{
				this.OnimageChanging(value);
				this.SendPropertyChanging();
				this._image = value;
				this.SendPropertyChanged("image");
				this.OnimageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coordenadasX", DbType="NVarChar(MAX)")]
	public string coordenadasX
	{
		get
		{
			return this._coordenadasX;
		}
		set
		{
			if ((this._coordenadasX != value))
			{
				this.OncoordenadasXChanging(value);
				this.SendPropertyChanging();
				this._coordenadasX = value;
				this.SendPropertyChanged("coordenadasX");
				this.OncoordenadasXChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coordenadasY", DbType="NVarChar(MAX)")]
	public string coordenadasY
	{
		get
		{
			return this._coordenadasY;
		}
		set
		{
			if ((this._coordenadasY != value))
			{
				this.OncoordenadasYChanging(value);
				this.SendPropertyChanging();
				this._coordenadasY = value;
				this.SendPropertyChanged("coordenadasY");
				this.OncoordenadasYChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuarios")]
public partial class Usuarios : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id_Usuario;
	
	private int _Id_Rol;
	
	private string _Username;
	
	private string _Password;
	
	private string _Nombre;
	
	private string _Apellido;
	
	private string _Correo_Electronico;
	
	private EntityRef<Rol> _Rol;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_UsuarioChanging(int value);
    partial void OnId_UsuarioChanged();
    partial void OnId_RolChanging(int value);
    partial void OnId_RolChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnCorreo_ElectronicoChanging(string value);
    partial void OnCorreo_ElectronicoChanged();
    #endregion
	
	public Usuarios()
	{
		this._Rol = default(EntityRef<Rol>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Usuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id_Usuario
	{
		get
		{
			return this._Id_Usuario;
		}
		set
		{
			if ((this._Id_Usuario != value))
			{
				this.OnId_UsuarioChanging(value);
				this.SendPropertyChanging();
				this._Id_Usuario = value;
				this.SendPropertyChanged("Id_Usuario");
				this.OnId_UsuarioChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Rol", DbType="Int NOT NULL")]
	public int Id_Rol
	{
		get
		{
			return this._Id_Rol;
		}
		set
		{
			if ((this._Id_Rol != value))
			{
				if (this._Rol.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnId_RolChanging(value);
				this.SendPropertyChanging();
				this._Id_Rol = value;
				this.SendPropertyChanged("Id_Rol");
				this.OnId_RolChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Username
	{
		get
		{
			return this._Username;
		}
		set
		{
			if ((this._Username != value))
			{
				this.OnUsernameChanging(value);
				this.SendPropertyChanging();
				this._Username = value;
				this.SendPropertyChanged("Username");
				this.OnUsernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Nombre
	{
		get
		{
			return this._Nombre;
		}
		set
		{
			if ((this._Nombre != value))
			{
				this.OnNombreChanging(value);
				this.SendPropertyChanging();
				this._Nombre = value;
				this.SendPropertyChanged("Nombre");
				this.OnNombreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Apellido
	{
		get
		{
			return this._Apellido;
		}
		set
		{
			if ((this._Apellido != value))
			{
				this.OnApellidoChanging(value);
				this.SendPropertyChanging();
				this._Apellido = value;
				this.SendPropertyChanged("Apellido");
				this.OnApellidoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo_Electronico", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Correo_Electronico
	{
		get
		{
			return this._Correo_Electronico;
		}
		set
		{
			if ((this._Correo_Electronico != value))
			{
				this.OnCorreo_ElectronicoChanging(value);
				this.SendPropertyChanging();
				this._Correo_Electronico = value;
				this.SendPropertyChanged("Correo_Electronico");
				this.OnCorreo_ElectronicoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_Usuarios", Storage="_Rol", ThisKey="Id_Rol", OtherKey="Id_Rol", IsForeignKey=true)]
	public Rol Rol
	{
		get
		{
			return this._Rol.Entity;
		}
		set
		{
			Rol previousValue = this._Rol.Entity;
			if (((previousValue != value) 
						|| (this._Rol.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Rol.Entity = null;
					previousValue.Usuarios.Remove(this);
				}
				this._Rol.Entity = value;
				if ((value != null))
				{
					value.Usuarios.Add(this);
					this._Id_Rol = value.Id_Rol;
				}
				else
				{
					this._Id_Rol = default(int);
				}
				this.SendPropertyChanged("Rol");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rol")]
public partial class Rol : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id_Rol;
	
	private string _Nombre_Rol;
	
	private EntitySet<Usuarios> _Usuarios;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_RolChanging(int value);
    partial void OnId_RolChanged();
    partial void OnNombre_RolChanging(string value);
    partial void OnNombre_RolChanged();
    #endregion
	
	public Rol()
	{
		this._Usuarios = new EntitySet<Usuarios>(new Action<Usuarios>(this.attach_Usuarios), new Action<Usuarios>(this.detach_Usuarios));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Rol", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id_Rol
	{
		get
		{
			return this._Id_Rol;
		}
		set
		{
			if ((this._Id_Rol != value))
			{
				this.OnId_RolChanging(value);
				this.SendPropertyChanging();
				this._Id_Rol = value;
				this.SendPropertyChanged("Id_Rol");
				this.OnId_RolChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre_Rol", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Nombre_Rol
	{
		get
		{
			return this._Nombre_Rol;
		}
		set
		{
			if ((this._Nombre_Rol != value))
			{
				this.OnNombre_RolChanging(value);
				this.SendPropertyChanging();
				this._Nombre_Rol = value;
				this.SendPropertyChanged("Nombre_Rol");
				this.OnNombre_RolChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_Usuarios", Storage="_Usuarios", ThisKey="Id_Rol", OtherKey="Id_Rol")]
	public EntitySet<Usuarios> Usuarios
	{
		get
		{
			return this._Usuarios;
		}
		set
		{
			this._Usuarios.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Usuarios(Usuarios entity)
	{
		this.SendPropertyChanging();
		entity.Rol = this;
	}
	
	private void detach_Usuarios(Usuarios entity)
	{
		this.SendPropertyChanging();
		entity.Rol = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Proyectos")]
public partial class Proyectos : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id_Proyecto;
	
	private string _Nombre;
	
	private decimal _Valor;
	
	private string _Propuesta_Pdf;
	
	private System.Nullable<System.DateTime> _Fecha_Propuesta;
	
	private string _Acta_Claustro;
	
	private string _Acta_Consejo_Escuela;
	
	private string _Acta_Consejo_Facultad;
	
	private string _Registro_VIE;
	
	private System.Nullable<System.DateTime> _Fecha_Registro_VIE;
	
	private string _Formato_Registro_VIE;
	
	private string _Carta_Presentación;
	
	private string _Memoria_Tecnica;
	
	private string _Presupuesto_interno;
	
	private EntitySet<Productos> _Productos;
	
	private EntitySet<Compromisos_Academicos> _Compromisos_Academicos;
	
	private EntitySet<Informe_CompromisosAcademicos> _Informe_CompromisosAcademicos;
	
	private EntitySet<Contrato_Convenio> _Contrato_Convenio;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ProyectoChanging(int value);
    partial void OnId_ProyectoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnValorChanging(decimal value);
    partial void OnValorChanged();
    partial void OnPropuesta_PdfChanging(string value);
    partial void OnPropuesta_PdfChanged();
    partial void OnFecha_PropuestaChanging(System.Nullable<System.DateTime> value);
    partial void OnFecha_PropuestaChanged();
    partial void OnActa_ClaustroChanging(string value);
    partial void OnActa_ClaustroChanged();
    partial void OnActa_Consejo_EscuelaChanging(string value);
    partial void OnActa_Consejo_EscuelaChanged();
    partial void OnActa_Consejo_FacultadChanging(string value);
    partial void OnActa_Consejo_FacultadChanged();
    partial void OnRegistro_VIEChanging(string value);
    partial void OnRegistro_VIEChanged();
    partial void OnFecha_Registro_VIEChanging(System.Nullable<System.DateTime> value);
    partial void OnFecha_Registro_VIEChanged();
    partial void OnFormato_Registro_VIEChanging(string value);
    partial void OnFormato_Registro_VIEChanged();
    partial void OnCarta_PresentaciónChanging(string value);
    partial void OnCarta_PresentaciónChanged();
    partial void OnMemoria_TecnicaChanging(string value);
    partial void OnMemoria_TecnicaChanged();
    partial void OnPresupuesto_internoChanging(string value);
    partial void OnPresupuesto_internoChanged();
    #endregion
	
	public Proyectos()
	{
		this._Productos = new EntitySet<Productos>(new Action<Productos>(this.attach_Productos), new Action<Productos>(this.detach_Productos));
		this._Compromisos_Academicos = new EntitySet<Compromisos_Academicos>(new Action<Compromisos_Academicos>(this.attach_Compromisos_Academicos), new Action<Compromisos_Academicos>(this.detach_Compromisos_Academicos));
		this._Informe_CompromisosAcademicos = new EntitySet<Informe_CompromisosAcademicos>(new Action<Informe_CompromisosAcademicos>(this.attach_Informe_CompromisosAcademicos), new Action<Informe_CompromisosAcademicos>(this.detach_Informe_CompromisosAcademicos));
		this._Contrato_Convenio = new EntitySet<Contrato_Convenio>(new Action<Contrato_Convenio>(this.attach_Contrato_Convenio), new Action<Contrato_Convenio>(this.detach_Contrato_Convenio));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Proyecto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id_Proyecto
	{
		get
		{
			return this._Id_Proyecto;
		}
		set
		{
			if ((this._Id_Proyecto != value))
			{
				this.OnId_ProyectoChanging(value);
				this.SendPropertyChanging();
				this._Id_Proyecto = value;
				this.SendPropertyChanged("Id_Proyecto");
				this.OnId_ProyectoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Nombre
	{
		get
		{
			return this._Nombre;
		}
		set
		{
			if ((this._Nombre != value))
			{
				this.OnNombreChanging(value);
				this.SendPropertyChanging();
				this._Nombre = value;
				this.SendPropertyChanged("Nombre");
				this.OnNombreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="Money NOT NULL")]
	public decimal Valor
	{
		get
		{
			return this._Valor;
		}
		set
		{
			if ((this._Valor != value))
			{
				this.OnValorChanging(value);
				this.SendPropertyChanging();
				this._Valor = value;
				this.SendPropertyChanged("Valor");
				this.OnValorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Propuesta_Pdf", DbType="VarChar(MAX)")]
	public string Propuesta_Pdf
	{
		get
		{
			return this._Propuesta_Pdf;
		}
		set
		{
			if ((this._Propuesta_Pdf != value))
			{
				this.OnPropuesta_PdfChanging(value);
				this.SendPropertyChanging();
				this._Propuesta_Pdf = value;
				this.SendPropertyChanged("Propuesta_Pdf");
				this.OnPropuesta_PdfChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_Propuesta", DbType="Date")]
	public System.Nullable<System.DateTime> Fecha_Propuesta
	{
		get
		{
			return this._Fecha_Propuesta;
		}
		set
		{
			if ((this._Fecha_Propuesta != value))
			{
				this.OnFecha_PropuestaChanging(value);
				this.SendPropertyChanging();
				this._Fecha_Propuesta = value;
				this.SendPropertyChanged("Fecha_Propuesta");
				this.OnFecha_PropuestaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acta_Claustro", DbType="VarChar(MAX)")]
	public string Acta_Claustro
	{
		get
		{
			return this._Acta_Claustro;
		}
		set
		{
			if ((this._Acta_Claustro != value))
			{
				this.OnActa_ClaustroChanging(value);
				this.SendPropertyChanging();
				this._Acta_Claustro = value;
				this.SendPropertyChanged("Acta_Claustro");
				this.OnActa_ClaustroChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acta_Consejo_Escuela", DbType="VarChar(MAX)")]
	public string Acta_Consejo_Escuela
	{
		get
		{
			return this._Acta_Consejo_Escuela;
		}
		set
		{
			if ((this._Acta_Consejo_Escuela != value))
			{
				this.OnActa_Consejo_EscuelaChanging(value);
				this.SendPropertyChanging();
				this._Acta_Consejo_Escuela = value;
				this.SendPropertyChanged("Acta_Consejo_Escuela");
				this.OnActa_Consejo_EscuelaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acta_Consejo_Facultad", DbType="VarChar(MAX)")]
	public string Acta_Consejo_Facultad
	{
		get
		{
			return this._Acta_Consejo_Facultad;
		}
		set
		{
			if ((this._Acta_Consejo_Facultad != value))
			{
				this.OnActa_Consejo_FacultadChanging(value);
				this.SendPropertyChanging();
				this._Acta_Consejo_Facultad = value;
				this.SendPropertyChanged("Acta_Consejo_Facultad");
				this.OnActa_Consejo_FacultadChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Registro_VIE", DbType="VarChar(MAX)")]
	public string Registro_VIE
	{
		get
		{
			return this._Registro_VIE;
		}
		set
		{
			if ((this._Registro_VIE != value))
			{
				this.OnRegistro_VIEChanging(value);
				this.SendPropertyChanging();
				this._Registro_VIE = value;
				this.SendPropertyChanged("Registro_VIE");
				this.OnRegistro_VIEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_Registro_VIE", DbType="Date")]
	public System.Nullable<System.DateTime> Fecha_Registro_VIE
	{
		get
		{
			return this._Fecha_Registro_VIE;
		}
		set
		{
			if ((this._Fecha_Registro_VIE != value))
			{
				this.OnFecha_Registro_VIEChanging(value);
				this.SendPropertyChanging();
				this._Fecha_Registro_VIE = value;
				this.SendPropertyChanged("Fecha_Registro_VIE");
				this.OnFecha_Registro_VIEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Formato_Registro_VIE", DbType="VarChar(MAX)")]
	public string Formato_Registro_VIE
	{
		get
		{
			return this._Formato_Registro_VIE;
		}
		set
		{
			if ((this._Formato_Registro_VIE != value))
			{
				this.OnFormato_Registro_VIEChanging(value);
				this.SendPropertyChanging();
				this._Formato_Registro_VIE = value;
				this.SendPropertyChanged("Formato_Registro_VIE");
				this.OnFormato_Registro_VIEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Carta_Presentación", DbType="VarChar(MAX)")]
	public string Carta_Presentación
	{
		get
		{
			return this._Carta_Presentación;
		}
		set
		{
			if ((this._Carta_Presentación != value))
			{
				this.OnCarta_PresentaciónChanging(value);
				this.SendPropertyChanging();
				this._Carta_Presentación = value;
				this.SendPropertyChanged("Carta_Presentación");
				this.OnCarta_PresentaciónChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memoria_Tecnica", DbType="NVarChar(MAX)")]
	public string Memoria_Tecnica
	{
		get
		{
			return this._Memoria_Tecnica;
		}
		set
		{
			if ((this._Memoria_Tecnica != value))
			{
				this.OnMemoria_TecnicaChanging(value);
				this.SendPropertyChanging();
				this._Memoria_Tecnica = value;
				this.SendPropertyChanged("Memoria_Tecnica");
				this.OnMemoria_TecnicaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Presupuesto_interno", DbType="NVarChar(MAX)")]
	public string Presupuesto_interno
	{
		get
		{
			return this._Presupuesto_interno;
		}
		set
		{
			if ((this._Presupuesto_interno != value))
			{
				this.OnPresupuesto_internoChanging(value);
				this.SendPropertyChanging();
				this._Presupuesto_interno = value;
				this.SendPropertyChanged("Presupuesto_interno");
				this.OnPresupuesto_internoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proyectos_Productos", Storage="_Productos", ThisKey="Id_Proyecto", OtherKey="Id_Proyectos")]
	public EntitySet<Productos> Productos
	{
		get
		{
			return this._Productos;
		}
		set
		{
			this._Productos.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proyectos_Compromisos_Academicos", Storage="_Compromisos_Academicos", ThisKey="Id_Proyecto", OtherKey="Id_Proyecto")]
	public EntitySet<Compromisos_Academicos> Compromisos_Academicos
	{
		get
		{
			return this._Compromisos_Academicos;
		}
		set
		{
			this._Compromisos_Academicos.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proyectos_Informe_CompromisosAcademicos", Storage="_Informe_CompromisosAcademicos", ThisKey="Id_Proyecto", OtherKey="Id_Proyecto")]
	public EntitySet<Informe_CompromisosAcademicos> Informe_CompromisosAcademicos
	{
		get
		{
			return this._Informe_CompromisosAcademicos;
		}
		set
		{
			this._Informe_CompromisosAcademicos.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proyectos_Contrato_Convenio", Storage="_Contrato_Convenio", ThisKey="Id_Proyecto", OtherKey="Id_Proyecto")]
	public EntitySet<Contrato_Convenio> Contrato_Convenio
	{
		get
		{
			return this._Contrato_Convenio;
		}
		set
		{
			this._Contrato_Convenio.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Productos(Productos entity)
	{
		this.SendPropertyChanging();
		entity.Proyectos = this;
	}
	
	private void detach_Productos(Productos entity)
	{
		this.SendPropertyChanging();
		entity.Proyectos = null;
	}
	
	private void attach_Compromisos_Academicos(Compromisos_Academicos entity)
	{
		this.SendPropertyChanging();
		entity.Proyectos = this;
	}
	
	private void detach_Compromisos_Academicos(Compromisos_Academicos entity)
	{
		this.SendPropertyChanging();
		entity.Proyectos = null;
	}
	
	private void attach_Informe_CompromisosAcademicos(Informe_CompromisosAcademicos entity)
	{
		this.SendPropertyChanging();
		entity.Proyectos = this;
	}
	
	private void detach_Informe_CompromisosAcademicos(Informe_CompromisosAcademicos entity)
	{
		this.SendPropertyChanging();
		entity.Proyectos = null;
	}
	
	private void attach_Contrato_Convenio(Contrato_Convenio entity)
	{
		this.SendPropertyChanging();
		entity.Proyectos = this;
	}
	
	private void detach_Contrato_Convenio(Contrato_Convenio entity)
	{
		this.SendPropertyChanging();
		entity.Proyectos = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estado_Contrato")]
public partial class Estado_Contrato : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id_Estado_Contrato;
	
	private string _Nombre_Estado;
	
	private EntitySet<Contrato_Convenio> _Contrato_Convenio;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_Estado_ContratoChanging(int value);
    partial void OnId_Estado_ContratoChanged();
    partial void OnNombre_EstadoChanging(string value);
    partial void OnNombre_EstadoChanged();
    #endregion
	
	public Estado_Contrato()
	{
		this._Contrato_Convenio = new EntitySet<Contrato_Convenio>(new Action<Contrato_Convenio>(this.attach_Contrato_Convenio), new Action<Contrato_Convenio>(this.detach_Contrato_Convenio));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Estado_Contrato", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id_Estado_Contrato
	{
		get
		{
			return this._Id_Estado_Contrato;
		}
		set
		{
			if ((this._Id_Estado_Contrato != value))
			{
				this.OnId_Estado_ContratoChanging(value);
				this.SendPropertyChanging();
				this._Id_Estado_Contrato = value;
				this.SendPropertyChanged("Id_Estado_Contrato");
				this.OnId_Estado_ContratoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre_Estado", DbType="NVarChar(MAX)")]
	public string Nombre_Estado
	{
		get
		{
			return this._Nombre_Estado;
		}
		set
		{
			if ((this._Nombre_Estado != value))
			{
				this.OnNombre_EstadoChanging(value);
				this.SendPropertyChanging();
				this._Nombre_Estado = value;
				this.SendPropertyChanged("Nombre_Estado");
				this.OnNombre_EstadoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Contrato_Contrato_Convenio", Storage="_Contrato_Convenio", ThisKey="Id_Estado_Contrato", OtherKey="Estado")]
	public EntitySet<Contrato_Convenio> Contrato_Convenio
	{
		get
		{
			return this._Contrato_Convenio;
		}
		set
		{
			this._Contrato_Convenio.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Contrato_Convenio(Contrato_Convenio entity)
	{
		this.SendPropertyChanging();
		entity.Estado_Contrato = this;
	}
	
	private void detach_Contrato_Convenio(Contrato_Convenio entity)
	{
		this.SendPropertyChanging();
		entity.Estado_Contrato = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Participantes")]
public partial class Participantes : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Productos_Id;
	
	private int _Colaborador_Id;
	
	private int _Rol;
	
	private EntityRef<Productos> _Productos;
	
	private EntityRef<Roles_Colaboradores> _Roles_Colaboradores;
	
	private EntityRef<Colaboradores> _Colaboradores;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductos_IdChanging(int value);
    partial void OnProductos_IdChanged();
    partial void OnColaborador_IdChanging(int value);
    partial void OnColaborador_IdChanged();
    partial void OnRolChanging(int value);
    partial void OnRolChanged();
    #endregion
	
	public Participantes()
	{
		this._Productos = default(EntityRef<Productos>);
		this._Roles_Colaboradores = default(EntityRef<Roles_Colaboradores>);
		this._Colaboradores = default(EntityRef<Colaboradores>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Productos_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Productos_Id
	{
		get
		{
			return this._Productos_Id;
		}
		set
		{
			if ((this._Productos_Id != value))
			{
				if (this._Productos.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductos_IdChanging(value);
				this.SendPropertyChanging();
				this._Productos_Id = value;
				this.SendPropertyChanged("Productos_Id");
				this.OnProductos_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Colaborador_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Colaborador_Id
	{
		get
		{
			return this._Colaborador_Id;
		}
		set
		{
			if ((this._Colaborador_Id != value))
			{
				if (this._Colaboradores.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnColaborador_IdChanging(value);
				this.SendPropertyChanging();
				this._Colaborador_Id = value;
				this.SendPropertyChanged("Colaborador_Id");
				this.OnColaborador_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rol", DbType="Int NOT NULL")]
	public int Rol
	{
		get
		{
			return this._Rol;
		}
		set
		{
			if ((this._Rol != value))
			{
				if (this._Roles_Colaboradores.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRolChanging(value);
				this.SendPropertyChanging();
				this._Rol = value;
				this.SendPropertyChanged("Rol");
				this.OnRolChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Productos_Participantes", Storage="_Productos", ThisKey="Productos_Id", OtherKey="Id_Productos", IsForeignKey=true)]
	public Productos Productos
	{
		get
		{
			return this._Productos.Entity;
		}
		set
		{
			Productos previousValue = this._Productos.Entity;
			if (((previousValue != value) 
						|| (this._Productos.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Productos.Entity = null;
					previousValue.Participantes.Remove(this);
				}
				this._Productos.Entity = value;
				if ((value != null))
				{
					value.Participantes.Add(this);
					this._Productos_Id = value.Id_Productos;
				}
				else
				{
					this._Productos_Id = default(int);
				}
				this.SendPropertyChanged("Productos");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_Colaboradores_Participantes", Storage="_Roles_Colaboradores", ThisKey="Rol", OtherKey="Id_Rol_Colaborador", IsForeignKey=true)]
	public Roles_Colaboradores Roles_Colaboradores
	{
		get
		{
			return this._Roles_Colaboradores.Entity;
		}
		set
		{
			Roles_Colaboradores previousValue = this._Roles_Colaboradores.Entity;
			if (((previousValue != value) 
						|| (this._Roles_Colaboradores.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Roles_Colaboradores.Entity = null;
					previousValue.Participantes.Remove(this);
				}
				this._Roles_Colaboradores.Entity = value;
				if ((value != null))
				{
					value.Participantes.Add(this);
					this._Rol = value.Id_Rol_Colaborador;
				}
				else
				{
					this._Rol = default(int);
				}
				this.SendPropertyChanged("Roles_Colaboradores");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Colaboradores_Participantes", Storage="_Colaboradores", ThisKey="Colaborador_Id", OtherKey="Id_Colaborador", IsForeignKey=true)]
	public Colaboradores Colaboradores
	{
		get
		{
			return this._Colaboradores.Entity;
		}
		set
		{
			Colaboradores previousValue = this._Colaboradores.Entity;
			if (((previousValue != value) 
						|| (this._Colaboradores.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Colaboradores.Entity = null;
					previousValue.Participantes.Remove(this);
				}
				this._Colaboradores.Entity = value;
				if ((value != null))
				{
					value.Participantes.Add(this);
					this._Colaborador_Id = value.Id_Colaborador;
				}
				else
				{
					this._Colaborador_Id = default(int);
				}
				this.SendPropertyChanged("Colaboradores");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles_Colaboradores")]
public partial class Roles_Colaboradores : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id_Rol_Colaborador;
	
	private string _Nombre_Rol;
	
	private EntitySet<Participantes> _Participantes;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_Rol_ColaboradorChanging(int value);
    partial void OnId_Rol_ColaboradorChanged();
    partial void OnNombre_RolChanging(string value);
    partial void OnNombre_RolChanged();
    #endregion
	
	public Roles_Colaboradores()
	{
		this._Participantes = new EntitySet<Participantes>(new Action<Participantes>(this.attach_Participantes), new Action<Participantes>(this.detach_Participantes));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Rol_Colaborador", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id_Rol_Colaborador
	{
		get
		{
			return this._Id_Rol_Colaborador;
		}
		set
		{
			if ((this._Id_Rol_Colaborador != value))
			{
				this.OnId_Rol_ColaboradorChanging(value);
				this.SendPropertyChanging();
				this._Id_Rol_Colaborador = value;
				this.SendPropertyChanged("Id_Rol_Colaborador");
				this.OnId_Rol_ColaboradorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre_Rol", DbType="NVarChar(50)")]
	public string Nombre_Rol
	{
		get
		{
			return this._Nombre_Rol;
		}
		set
		{
			if ((this._Nombre_Rol != value))
			{
				this.OnNombre_RolChanging(value);
				this.SendPropertyChanging();
				this._Nombre_Rol = value;
				this.SendPropertyChanged("Nombre_Rol");
				this.OnNombre_RolChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_Colaboradores_Participantes", Storage="_Participantes", ThisKey="Id_Rol_Colaborador", OtherKey="Rol")]
	public EntitySet<Participantes> Participantes
	{
		get
		{
			return this._Participantes;
		}
		set
		{
			this._Participantes.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Participantes(Participantes entity)
	{
		this.SendPropertyChanging();
		entity.Roles_Colaboradores = this;
	}
	
	private void detach_Participantes(Participantes entity)
	{
		this.SendPropertyChanging();
		entity.Roles_Colaboradores = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tipo_Compromiso_Academico")]
public partial class Tipo_Compromiso_Academico : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id_Tipo_Compromiso;
	
	private string _Tipo_Compromiso_Academico1;
	
	private EntitySet<Compromisos_Academicos> _Compromisos_Academicos;
	
	private EntitySet<Informe_CompromisosAcademicos> _Informe_CompromisosAcademicos;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_Tipo_CompromisoChanging(int value);
    partial void OnId_Tipo_CompromisoChanged();
    partial void OnTipo_Compromiso_Academico1Changing(string value);
    partial void OnTipo_Compromiso_Academico1Changed();
    #endregion
	
	public Tipo_Compromiso_Academico()
	{
		this._Compromisos_Academicos = new EntitySet<Compromisos_Academicos>(new Action<Compromisos_Academicos>(this.attach_Compromisos_Academicos), new Action<Compromisos_Academicos>(this.detach_Compromisos_Academicos));
		this._Informe_CompromisosAcademicos = new EntitySet<Informe_CompromisosAcademicos>(new Action<Informe_CompromisosAcademicos>(this.attach_Informe_CompromisosAcademicos), new Action<Informe_CompromisosAcademicos>(this.detach_Informe_CompromisosAcademicos));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Tipo_Compromiso", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id_Tipo_Compromiso
	{
		get
		{
			return this._Id_Tipo_Compromiso;
		}
		set
		{
			if ((this._Id_Tipo_Compromiso != value))
			{
				this.OnId_Tipo_CompromisoChanging(value);
				this.SendPropertyChanging();
				this._Id_Tipo_Compromiso = value;
				this.SendPropertyChanged("Id_Tipo_Compromiso");
				this.OnId_Tipo_CompromisoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Tipo_Compromiso_Academico", Storage="_Tipo_Compromiso_Academico1", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Tipo_Compromiso_Academico1
	{
		get
		{
			return this._Tipo_Compromiso_Academico1;
		}
		set
		{
			if ((this._Tipo_Compromiso_Academico1 != value))
			{
				this.OnTipo_Compromiso_Academico1Changing(value);
				this.SendPropertyChanging();
				this._Tipo_Compromiso_Academico1 = value;
				this.SendPropertyChanged("Tipo_Compromiso_Academico1");
				this.OnTipo_Compromiso_Academico1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Compromiso_Academico_Compromisos_Academicos", Storage="_Compromisos_Academicos", ThisKey="Id_Tipo_Compromiso", OtherKey="Tipo_Compromiso")]
	public EntitySet<Compromisos_Academicos> Compromisos_Academicos
	{
		get
		{
			return this._Compromisos_Academicos;
		}
		set
		{
			this._Compromisos_Academicos.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Compromiso_Academico_Informe_CompromisosAcademicos", Storage="_Informe_CompromisosAcademicos", ThisKey="Id_Tipo_Compromiso", OtherKey="Id_Tipo_Compromiso")]
	public EntitySet<Informe_CompromisosAcademicos> Informe_CompromisosAcademicos
	{
		get
		{
			return this._Informe_CompromisosAcademicos;
		}
		set
		{
			this._Informe_CompromisosAcademicos.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Compromisos_Academicos(Compromisos_Academicos entity)
	{
		this.SendPropertyChanging();
		entity.Tipo_Compromiso_Academico = this;
	}
	
	private void detach_Compromisos_Academicos(Compromisos_Academicos entity)
	{
		this.SendPropertyChanging();
		entity.Tipo_Compromiso_Academico = null;
	}
	
	private void attach_Informe_CompromisosAcademicos(Informe_CompromisosAcademicos entity)
	{
		this.SendPropertyChanging();
		entity.Tipo_Compromiso_Academico = this;
	}
	
	private void detach_Informe_CompromisosAcademicos(Informe_CompromisosAcademicos entity)
	{
		this.SendPropertyChanging();
		entity.Tipo_Compromiso_Academico = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Compromisos_Academicos")]
public partial class Compromisos_Academicos : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id_Compromiso_Academico;
	
	private int _Id_Proyecto;
	
	private int _Tipo_Compromiso;
	
	private string _Nombre;
	
	private System.Nullable<System.DateTime> _Fecha;
	
	private string _Detalles_Compromiso;
	
	private EntitySet<Autores_Compromisos> _Autores_Compromisos;
	
	private EntityRef<Tipo_Compromiso_Academico> _Tipo_Compromiso_Academico;
	
	private EntityRef<Proyectos> _Proyectos;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_Compromiso_AcademicoChanging(int value);
    partial void OnId_Compromiso_AcademicoChanged();
    partial void OnId_ProyectoChanging(int value);
    partial void OnId_ProyectoChanged();
    partial void OnTipo_CompromisoChanging(int value);
    partial void OnTipo_CompromisoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnDetalles_CompromisoChanging(string value);
    partial void OnDetalles_CompromisoChanged();
    #endregion
	
	public Compromisos_Academicos()
	{
		this._Autores_Compromisos = new EntitySet<Autores_Compromisos>(new Action<Autores_Compromisos>(this.attach_Autores_Compromisos), new Action<Autores_Compromisos>(this.detach_Autores_Compromisos));
		this._Tipo_Compromiso_Academico = default(EntityRef<Tipo_Compromiso_Academico>);
		this._Proyectos = default(EntityRef<Proyectos>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Compromiso_Academico", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id_Compromiso_Academico
	{
		get
		{
			return this._Id_Compromiso_Academico;
		}
		set
		{
			if ((this._Id_Compromiso_Academico != value))
			{
				this.OnId_Compromiso_AcademicoChanging(value);
				this.SendPropertyChanging();
				this._Id_Compromiso_Academico = value;
				this.SendPropertyChanged("Id_Compromiso_Academico");
				this.OnId_Compromiso_AcademicoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Proyecto", DbType="Int NOT NULL")]
	public int Id_Proyecto
	{
		get
		{
			return this._Id_Proyecto;
		}
		set
		{
			if ((this._Id_Proyecto != value))
			{
				if (this._Proyectos.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnId_ProyectoChanging(value);
				this.SendPropertyChanging();
				this._Id_Proyecto = value;
				this.SendPropertyChanged("Id_Proyecto");
				this.OnId_ProyectoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo_Compromiso", DbType="Int NOT NULL")]
	public int Tipo_Compromiso
	{
		get
		{
			return this._Tipo_Compromiso;
		}
		set
		{
			if ((this._Tipo_Compromiso != value))
			{
				if (this._Tipo_Compromiso_Academico.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTipo_CompromisoChanging(value);
				this.SendPropertyChanging();
				this._Tipo_Compromiso = value;
				this.SendPropertyChanged("Tipo_Compromiso");
				this.OnTipo_CompromisoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50)")]
	public string Nombre
	{
		get
		{
			return this._Nombre;
		}
		set
		{
			if ((this._Nombre != value))
			{
				this.OnNombreChanging(value);
				this.SendPropertyChanging();
				this._Nombre = value;
				this.SendPropertyChanged("Nombre");
				this.OnNombreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date")]
	public System.Nullable<System.DateTime> Fecha
	{
		get
		{
			return this._Fecha;
		}
		set
		{
			if ((this._Fecha != value))
			{
				this.OnFechaChanging(value);
				this.SendPropertyChanging();
				this._Fecha = value;
				this.SendPropertyChanged("Fecha");
				this.OnFechaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalles_Compromiso", DbType="NVarChar(MAX)")]
	public string Detalles_Compromiso
	{
		get
		{
			return this._Detalles_Compromiso;
		}
		set
		{
			if ((this._Detalles_Compromiso != value))
			{
				this.OnDetalles_CompromisoChanging(value);
				this.SendPropertyChanging();
				this._Detalles_Compromiso = value;
				this.SendPropertyChanged("Detalles_Compromiso");
				this.OnDetalles_CompromisoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Compromisos_Academicos_Autores_Compromisos", Storage="_Autores_Compromisos", ThisKey="Id_Compromiso_Academico", OtherKey="Id_Compromiso")]
	public EntitySet<Autores_Compromisos> Autores_Compromisos
	{
		get
		{
			return this._Autores_Compromisos;
		}
		set
		{
			this._Autores_Compromisos.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Compromiso_Academico_Compromisos_Academicos", Storage="_Tipo_Compromiso_Academico", ThisKey="Tipo_Compromiso", OtherKey="Id_Tipo_Compromiso", IsForeignKey=true)]
	public Tipo_Compromiso_Academico Tipo_Compromiso_Academico
	{
		get
		{
			return this._Tipo_Compromiso_Academico.Entity;
		}
		set
		{
			Tipo_Compromiso_Academico previousValue = this._Tipo_Compromiso_Academico.Entity;
			if (((previousValue != value) 
						|| (this._Tipo_Compromiso_Academico.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Tipo_Compromiso_Academico.Entity = null;
					previousValue.Compromisos_Academicos.Remove(this);
				}
				this._Tipo_Compromiso_Academico.Entity = value;
				if ((value != null))
				{
					value.Compromisos_Academicos.Add(this);
					this._Tipo_Compromiso = value.Id_Tipo_Compromiso;
				}
				else
				{
					this._Tipo_Compromiso = default(int);
				}
				this.SendPropertyChanged("Tipo_Compromiso_Academico");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proyectos_Compromisos_Academicos", Storage="_Proyectos", ThisKey="Id_Proyecto", OtherKey="Id_Proyecto", IsForeignKey=true)]
	public Proyectos Proyectos
	{
		get
		{
			return this._Proyectos.Entity;
		}
		set
		{
			Proyectos previousValue = this._Proyectos.Entity;
			if (((previousValue != value) 
						|| (this._Proyectos.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Proyectos.Entity = null;
					previousValue.Compromisos_Academicos.Remove(this);
				}
				this._Proyectos.Entity = value;
				if ((value != null))
				{
					value.Compromisos_Academicos.Add(this);
					this._Id_Proyecto = value.Id_Proyecto;
				}
				else
				{
					this._Id_Proyecto = default(int);
				}
				this.SendPropertyChanged("Proyectos");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Autores_Compromisos(Autores_Compromisos entity)
	{
		this.SendPropertyChanging();
		entity.Compromisos_Academicos = this;
	}
	
	private void detach_Autores_Compromisos(Autores_Compromisos entity)
	{
		this.SendPropertyChanging();
		entity.Compromisos_Academicos = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Actas")]
public partial class Actas : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id_Actas;
	
	private int _Tipo_Acta;
	
	private int _Nombre_Contrato_Convenio;
	
	private System.Nullable<System.DateTime> _Fecha_Acta;
	
	private string _Descripción;
	
	private string _Archivo_Pdf;
	
	private System.Nullable<System.DateTime> _Fecha_Actividad;
	
	private EntityRef<Tipo_Acta> _Tipo_Acta1;
	
	private EntityRef<Contrato_Convenio> _Contrato_Convenio;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ActasChanging(int value);
    partial void OnId_ActasChanged();
    partial void OnTipo_ActaChanging(int value);
    partial void OnTipo_ActaChanged();
    partial void OnNombre_Contrato_ConvenioChanging(int value);
    partial void OnNombre_Contrato_ConvenioChanged();
    partial void OnFecha_ActaChanging(System.Nullable<System.DateTime> value);
    partial void OnFecha_ActaChanged();
    partial void OnDescripciónChanging(string value);
    partial void OnDescripciónChanged();
    partial void OnArchivo_PdfChanging(string value);
    partial void OnArchivo_PdfChanged();
    partial void OnFecha_ActividadChanging(System.Nullable<System.DateTime> value);
    partial void OnFecha_ActividadChanged();
    #endregion
	
	public Actas()
	{
		this._Tipo_Acta1 = default(EntityRef<Tipo_Acta>);
		this._Contrato_Convenio = default(EntityRef<Contrato_Convenio>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Actas", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id_Actas
	{
		get
		{
			return this._Id_Actas;
		}
		set
		{
			if ((this._Id_Actas != value))
			{
				this.OnId_ActasChanging(value);
				this.SendPropertyChanging();
				this._Id_Actas = value;
				this.SendPropertyChanged("Id_Actas");
				this.OnId_ActasChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo_Acta", DbType="Int NOT NULL")]
	public int Tipo_Acta
	{
		get
		{
			return this._Tipo_Acta;
		}
		set
		{
			if ((this._Tipo_Acta != value))
			{
				if (this._Tipo_Acta1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTipo_ActaChanging(value);
				this.SendPropertyChanging();
				this._Tipo_Acta = value;
				this.SendPropertyChanged("Tipo_Acta");
				this.OnTipo_ActaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre_Contrato_Convenio", DbType="Int NOT NULL")]
	public int Nombre_Contrato_Convenio
	{
		get
		{
			return this._Nombre_Contrato_Convenio;
		}
		set
		{
			if ((this._Nombre_Contrato_Convenio != value))
			{
				if (this._Contrato_Convenio.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnNombre_Contrato_ConvenioChanging(value);
				this.SendPropertyChanging();
				this._Nombre_Contrato_Convenio = value;
				this.SendPropertyChanged("Nombre_Contrato_Convenio");
				this.OnNombre_Contrato_ConvenioChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_Acta", DbType="Date")]
	public System.Nullable<System.DateTime> Fecha_Acta
	{
		get
		{
			return this._Fecha_Acta;
		}
		set
		{
			if ((this._Fecha_Acta != value))
			{
				this.OnFecha_ActaChanging(value);
				this.SendPropertyChanging();
				this._Fecha_Acta = value;
				this.SendPropertyChanged("Fecha_Acta");
				this.OnFecha_ActaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripción", DbType="VarChar(MAX)")]
	public string Descripción
	{
		get
		{
			return this._Descripción;
		}
		set
		{
			if ((this._Descripción != value))
			{
				this.OnDescripciónChanging(value);
				this.SendPropertyChanging();
				this._Descripción = value;
				this.SendPropertyChanged("Descripción");
				this.OnDescripciónChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archivo_Pdf", DbType="VarChar(MAX)")]
	public string Archivo_Pdf
	{
		get
		{
			return this._Archivo_Pdf;
		}
		set
		{
			if ((this._Archivo_Pdf != value))
			{
				this.OnArchivo_PdfChanging(value);
				this.SendPropertyChanging();
				this._Archivo_Pdf = value;
				this.SendPropertyChanged("Archivo_Pdf");
				this.OnArchivo_PdfChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_Actividad", DbType="Date")]
	public System.Nullable<System.DateTime> Fecha_Actividad
	{
		get
		{
			return this._Fecha_Actividad;
		}
		set
		{
			if ((this._Fecha_Actividad != value))
			{
				this.OnFecha_ActividadChanging(value);
				this.SendPropertyChanging();
				this._Fecha_Actividad = value;
				this.SendPropertyChanged("Fecha_Actividad");
				this.OnFecha_ActividadChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Acta_Actas", Storage="_Tipo_Acta1", ThisKey="Tipo_Acta", OtherKey="Id_Tipo_Acta", IsForeignKey=true)]
	public Tipo_Acta Tipo_Acta1
	{
		get
		{
			return this._Tipo_Acta1.Entity;
		}
		set
		{
			Tipo_Acta previousValue = this._Tipo_Acta1.Entity;
			if (((previousValue != value) 
						|| (this._Tipo_Acta1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Tipo_Acta1.Entity = null;
					previousValue.Actas.Remove(this);
				}
				this._Tipo_Acta1.Entity = value;
				if ((value != null))
				{
					value.Actas.Add(this);
					this._Tipo_Acta = value.Id_Tipo_Acta;
				}
				else
				{
					this._Tipo_Acta = default(int);
				}
				this.SendPropertyChanged("Tipo_Acta1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contrato_Convenio_Actas", Storage="_Contrato_Convenio", ThisKey="Nombre_Contrato_Convenio", OtherKey="Id_Convenio_Contrato", IsForeignKey=true)]
	public Contrato_Convenio Contrato_Convenio
	{
		get
		{
			return this._Contrato_Convenio.Entity;
		}
		set
		{
			Contrato_Convenio previousValue = this._Contrato_Convenio.Entity;
			if (((previousValue != value) 
						|| (this._Contrato_Convenio.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Contrato_Convenio.Entity = null;
					previousValue.Actas.Remove(this);
				}
				this._Contrato_Convenio.Entity = value;
				if ((value != null))
				{
					value.Actas.Add(this);
					this._Nombre_Contrato_Convenio = value.Id_Convenio_Contrato;
				}
				else
				{
					this._Nombre_Contrato_Convenio = default(int);
				}
				this.SendPropertyChanged("Contrato_Convenio");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Otrosí_Adiciones")]
public partial class Otrosí_Adiciones : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id_Otrosí;
	
	private int _Convenio_Contrato;
	
	private int _Tipo_Otrosi_Adición;
	
	private string _Nombre;
	
	private System.Nullable<System.DateTime> _Fecha_Otrosi_Adición;
	
	private string _Descripción;
	
	private string _Archivo_Pdf;
	
	private System.Nullable<decimal> _Valor_Adicional;
	
	private string _Tiempo_Adicional;
	
	private EntityRef<Tipo_Adicion> _Tipo_Adicion;
	
	private EntityRef<Contrato_Convenio> _Contrato_Convenio;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_OtrosíChanging(int value);
    partial void OnId_OtrosíChanged();
    partial void OnConvenio_ContratoChanging(int value);
    partial void OnConvenio_ContratoChanged();
    partial void OnTipo_Otrosi_AdiciónChanging(int value);
    partial void OnTipo_Otrosi_AdiciónChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnFecha_Otrosi_AdiciónChanging(System.Nullable<System.DateTime> value);
    partial void OnFecha_Otrosi_AdiciónChanged();
    partial void OnDescripciónChanging(string value);
    partial void OnDescripciónChanged();
    partial void OnArchivo_PdfChanging(string value);
    partial void OnArchivo_PdfChanged();
    partial void OnValor_AdicionalChanging(System.Nullable<decimal> value);
    partial void OnValor_AdicionalChanged();
    partial void OnTiempo_AdicionalChanging(string value);
    partial void OnTiempo_AdicionalChanged();
    #endregion
	
	public Otrosí_Adiciones()
	{
		this._Tipo_Adicion = default(EntityRef<Tipo_Adicion>);
		this._Contrato_Convenio = default(EntityRef<Contrato_Convenio>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Otrosí", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id_Otrosí
	{
		get
		{
			return this._Id_Otrosí;
		}
		set
		{
			if ((this._Id_Otrosí != value))
			{
				this.OnId_OtrosíChanging(value);
				this.SendPropertyChanging();
				this._Id_Otrosí = value;
				this.SendPropertyChanged("Id_Otrosí");
				this.OnId_OtrosíChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Convenio_Contrato", DbType="Int NOT NULL")]
	public int Convenio_Contrato
	{
		get
		{
			return this._Convenio_Contrato;
		}
		set
		{
			if ((this._Convenio_Contrato != value))
			{
				if (this._Contrato_Convenio.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnConvenio_ContratoChanging(value);
				this.SendPropertyChanging();
				this._Convenio_Contrato = value;
				this.SendPropertyChanged("Convenio_Contrato");
				this.OnConvenio_ContratoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo_Otrosi_Adición", DbType="Int NOT NULL")]
	public int Tipo_Otrosi_Adición
	{
		get
		{
			return this._Tipo_Otrosi_Adición;
		}
		set
		{
			if ((this._Tipo_Otrosi_Adición != value))
			{
				if (this._Tipo_Adicion.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTipo_Otrosi_AdiciónChanging(value);
				this.SendPropertyChanging();
				this._Tipo_Otrosi_Adición = value;
				this.SendPropertyChanged("Tipo_Otrosi_Adición");
				this.OnTipo_Otrosi_AdiciónChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(MAX)")]
	public string Nombre
	{
		get
		{
			return this._Nombre;
		}
		set
		{
			if ((this._Nombre != value))
			{
				this.OnNombreChanging(value);
				this.SendPropertyChanging();
				this._Nombre = value;
				this.SendPropertyChanged("Nombre");
				this.OnNombreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_Otrosi_Adición", DbType="Date")]
	public System.Nullable<System.DateTime> Fecha_Otrosi_Adición
	{
		get
		{
			return this._Fecha_Otrosi_Adición;
		}
		set
		{
			if ((this._Fecha_Otrosi_Adición != value))
			{
				this.OnFecha_Otrosi_AdiciónChanging(value);
				this.SendPropertyChanging();
				this._Fecha_Otrosi_Adición = value;
				this.SendPropertyChanged("Fecha_Otrosi_Adición");
				this.OnFecha_Otrosi_AdiciónChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripción", DbType="VarChar(MAX)")]
	public string Descripción
	{
		get
		{
			return this._Descripción;
		}
		set
		{
			if ((this._Descripción != value))
			{
				this.OnDescripciónChanging(value);
				this.SendPropertyChanging();
				this._Descripción = value;
				this.SendPropertyChanged("Descripción");
				this.OnDescripciónChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archivo_Pdf", DbType="VarChar(MAX)")]
	public string Archivo_Pdf
	{
		get
		{
			return this._Archivo_Pdf;
		}
		set
		{
			if ((this._Archivo_Pdf != value))
			{
				this.OnArchivo_PdfChanging(value);
				this.SendPropertyChanging();
				this._Archivo_Pdf = value;
				this.SendPropertyChanged("Archivo_Pdf");
				this.OnArchivo_PdfChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor_Adicional", DbType="Money")]
	public System.Nullable<decimal> Valor_Adicional
	{
		get
		{
			return this._Valor_Adicional;
		}
		set
		{
			if ((this._Valor_Adicional != value))
			{
				this.OnValor_AdicionalChanging(value);
				this.SendPropertyChanging();
				this._Valor_Adicional = value;
				this.SendPropertyChanged("Valor_Adicional");
				this.OnValor_AdicionalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tiempo_Adicional", DbType="VarChar(50)")]
	public string Tiempo_Adicional
	{
		get
		{
			return this._Tiempo_Adicional;
		}
		set
		{
			if ((this._Tiempo_Adicional != value))
			{
				this.OnTiempo_AdicionalChanging(value);
				this.SendPropertyChanging();
				this._Tiempo_Adicional = value;
				this.SendPropertyChanged("Tiempo_Adicional");
				this.OnTiempo_AdicionalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Adicion_Otrosí_Adiciones", Storage="_Tipo_Adicion", ThisKey="Tipo_Otrosi_Adición", OtherKey="Id_Adicion", IsForeignKey=true)]
	public Tipo_Adicion Tipo_Adicion
	{
		get
		{
			return this._Tipo_Adicion.Entity;
		}
		set
		{
			Tipo_Adicion previousValue = this._Tipo_Adicion.Entity;
			if (((previousValue != value) 
						|| (this._Tipo_Adicion.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Tipo_Adicion.Entity = null;
					previousValue.Otrosí_Adiciones.Remove(this);
				}
				this._Tipo_Adicion.Entity = value;
				if ((value != null))
				{
					value.Otrosí_Adiciones.Add(this);
					this._Tipo_Otrosi_Adición = value.Id_Adicion;
				}
				else
				{
					this._Tipo_Otrosi_Adición = default(int);
				}
				this.SendPropertyChanged("Tipo_Adicion");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contrato_Convenio_Otrosí_Adiciones", Storage="_Contrato_Convenio", ThisKey="Convenio_Contrato", OtherKey="Id_Convenio_Contrato", IsForeignKey=true)]
	public Contrato_Convenio Contrato_Convenio
	{
		get
		{
			return this._Contrato_Convenio.Entity;
		}
		set
		{
			Contrato_Convenio previousValue = this._Contrato_Convenio.Entity;
			if (((previousValue != value) 
						|| (this._Contrato_Convenio.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Contrato_Convenio.Entity = null;
					previousValue.Otrosí_Adiciones.Remove(this);
				}
				this._Contrato_Convenio.Entity = value;
				if ((value != null))
				{
					value.Otrosí_Adiciones.Add(this);
					this._Convenio_Contrato = value.Id_Convenio_Contrato;
				}
				else
				{
					this._Convenio_Contrato = default(int);
				}
				this.SendPropertyChanged("Contrato_Convenio");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Colaboradores")]
public partial class Colaboradores : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id_Colaborador;
	
	private string _Nombre_Colaborador;
	
	private double _Cedula_Ciudadania;
	
	private EntitySet<Participantes> _Participantes;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ColaboradorChanging(int value);
    partial void OnId_ColaboradorChanged();
    partial void OnNombre_ColaboradorChanging(string value);
    partial void OnNombre_ColaboradorChanged();
    partial void OnCedula_CiudadaniaChanging(double value);
    partial void OnCedula_CiudadaniaChanged();
    #endregion
	
	public Colaboradores()
	{
		this._Participantes = new EntitySet<Participantes>(new Action<Participantes>(this.attach_Participantes), new Action<Participantes>(this.detach_Participantes));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Colaborador", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id_Colaborador
	{
		get
		{
			return this._Id_Colaborador;
		}
		set
		{
			if ((this._Id_Colaborador != value))
			{
				this.OnId_ColaboradorChanging(value);
				this.SendPropertyChanging();
				this._Id_Colaborador = value;
				this.SendPropertyChanged("Id_Colaborador");
				this.OnId_ColaboradorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre_Colaborador", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Nombre_Colaborador
	{
		get
		{
			return this._Nombre_Colaborador;
		}
		set
		{
			if ((this._Nombre_Colaborador != value))
			{
				this.OnNombre_ColaboradorChanging(value);
				this.SendPropertyChanging();
				this._Nombre_Colaborador = value;
				this.SendPropertyChanged("Nombre_Colaborador");
				this.OnNombre_ColaboradorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cedula_Ciudadania", DbType="Float NOT NULL")]
	public double Cedula_Ciudadania
	{
		get
		{
			return this._Cedula_Ciudadania;
		}
		set
		{
			if ((this._Cedula_Ciudadania != value))
			{
				this.OnCedula_CiudadaniaChanging(value);
				this.SendPropertyChanging();
				this._Cedula_Ciudadania = value;
				this.SendPropertyChanged("Cedula_Ciudadania");
				this.OnCedula_CiudadaniaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Colaboradores_Participantes", Storage="_Participantes", ThisKey="Id_Colaborador", OtherKey="Colaborador_Id")]
	public EntitySet<Participantes> Participantes
	{
		get
		{
			return this._Participantes;
		}
		set
		{
			this._Participantes.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Participantes(Participantes entity)
	{
		this.SendPropertyChanging();
		entity.Colaboradores = this;
	}
	
	private void detach_Participantes(Participantes entity)
	{
		this.SendPropertyChanging();
		entity.Colaboradores = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Informe_CompromisosAcademicos")]
public partial class Informe_CompromisosAcademicos : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id_Informe;
	
	private int _Id_Proyecto;
	
	private int _Id_Tipo_Compromiso;
	
	private int _Cantidad;
	
	private EntityRef<Proyectos> _Proyectos;
	
	private EntityRef<Tipo_Compromiso_Academico> _Tipo_Compromiso_Academico;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_InformeChanging(int value);
    partial void OnId_InformeChanged();
    partial void OnId_ProyectoChanging(int value);
    partial void OnId_ProyectoChanged();
    partial void OnId_Tipo_CompromisoChanging(int value);
    partial void OnId_Tipo_CompromisoChanged();
    partial void OnCantidadChanging(int value);
    partial void OnCantidadChanged();
    #endregion
	
	public Informe_CompromisosAcademicos()
	{
		this._Proyectos = default(EntityRef<Proyectos>);
		this._Tipo_Compromiso_Academico = default(EntityRef<Tipo_Compromiso_Academico>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Informe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id_Informe
	{
		get
		{
			return this._Id_Informe;
		}
		set
		{
			if ((this._Id_Informe != value))
			{
				this.OnId_InformeChanging(value);
				this.SendPropertyChanging();
				this._Id_Informe = value;
				this.SendPropertyChanged("Id_Informe");
				this.OnId_InformeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Proyecto", DbType="Int NOT NULL")]
	public int Id_Proyecto
	{
		get
		{
			return this._Id_Proyecto;
		}
		set
		{
			if ((this._Id_Proyecto != value))
			{
				if (this._Proyectos.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnId_ProyectoChanging(value);
				this.SendPropertyChanging();
				this._Id_Proyecto = value;
				this.SendPropertyChanged("Id_Proyecto");
				this.OnId_ProyectoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Tipo_Compromiso", DbType="Int NOT NULL")]
	public int Id_Tipo_Compromiso
	{
		get
		{
			return this._Id_Tipo_Compromiso;
		}
		set
		{
			if ((this._Id_Tipo_Compromiso != value))
			{
				if (this._Tipo_Compromiso_Academico.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnId_Tipo_CompromisoChanging(value);
				this.SendPropertyChanging();
				this._Id_Tipo_Compromiso = value;
				this.SendPropertyChanged("Id_Tipo_Compromiso");
				this.OnId_Tipo_CompromisoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Int NOT NULL")]
	public int Cantidad
	{
		get
		{
			return this._Cantidad;
		}
		set
		{
			if ((this._Cantidad != value))
			{
				this.OnCantidadChanging(value);
				this.SendPropertyChanging();
				this._Cantidad = value;
				this.SendPropertyChanged("Cantidad");
				this.OnCantidadChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proyectos_Informe_CompromisosAcademicos", Storage="_Proyectos", ThisKey="Id_Proyecto", OtherKey="Id_Proyecto", IsForeignKey=true)]
	public Proyectos Proyectos
	{
		get
		{
			return this._Proyectos.Entity;
		}
		set
		{
			Proyectos previousValue = this._Proyectos.Entity;
			if (((previousValue != value) 
						|| (this._Proyectos.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Proyectos.Entity = null;
					previousValue.Informe_CompromisosAcademicos.Remove(this);
				}
				this._Proyectos.Entity = value;
				if ((value != null))
				{
					value.Informe_CompromisosAcademicos.Add(this);
					this._Id_Proyecto = value.Id_Proyecto;
				}
				else
				{
					this._Id_Proyecto = default(int);
				}
				this.SendPropertyChanged("Proyectos");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Compromiso_Academico_Informe_CompromisosAcademicos", Storage="_Tipo_Compromiso_Academico", ThisKey="Id_Tipo_Compromiso", OtherKey="Id_Tipo_Compromiso", IsForeignKey=true)]
	public Tipo_Compromiso_Academico Tipo_Compromiso_Academico
	{
		get
		{
			return this._Tipo_Compromiso_Academico.Entity;
		}
		set
		{
			Tipo_Compromiso_Academico previousValue = this._Tipo_Compromiso_Academico.Entity;
			if (((previousValue != value) 
						|| (this._Tipo_Compromiso_Academico.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Tipo_Compromiso_Academico.Entity = null;
					previousValue.Informe_CompromisosAcademicos.Remove(this);
				}
				this._Tipo_Compromiso_Academico.Entity = value;
				if ((value != null))
				{
					value.Informe_CompromisosAcademicos.Add(this);
					this._Id_Tipo_Compromiso = value.Id_Tipo_Compromiso;
				}
				else
				{
					this._Id_Tipo_Compromiso = default(int);
				}
				this.SendPropertyChanged("Tipo_Compromiso_Academico");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Autores_Compromisos")]
public partial class Autores_Compromisos : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id_Autor;
	
	private int _Id_Compromiso;
	
	private string _Nombre_Autor;
	
	private string _Codigo_Autor;
	
	private EntityRef<Compromisos_Academicos> _Compromisos_Academicos;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_AutorChanging(int value);
    partial void OnId_AutorChanged();
    partial void OnId_CompromisoChanging(int value);
    partial void OnId_CompromisoChanged();
    partial void OnNombre_AutorChanging(string value);
    partial void OnNombre_AutorChanged();
    partial void OnCodigo_AutorChanging(string value);
    partial void OnCodigo_AutorChanged();
    #endregion
	
	public Autores_Compromisos()
	{
		this._Compromisos_Academicos = default(EntityRef<Compromisos_Academicos>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Autor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id_Autor
	{
		get
		{
			return this._Id_Autor;
		}
		set
		{
			if ((this._Id_Autor != value))
			{
				this.OnId_AutorChanging(value);
				this.SendPropertyChanging();
				this._Id_Autor = value;
				this.SendPropertyChanged("Id_Autor");
				this.OnId_AutorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Compromiso", DbType="Int NOT NULL")]
	public int Id_Compromiso
	{
		get
		{
			return this._Id_Compromiso;
		}
		set
		{
			if ((this._Id_Compromiso != value))
			{
				if (this._Compromisos_Academicos.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnId_CompromisoChanging(value);
				this.SendPropertyChanging();
				this._Id_Compromiso = value;
				this.SendPropertyChanged("Id_Compromiso");
				this.OnId_CompromisoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre_Autor", DbType="NVarChar(50)")]
	public string Nombre_Autor
	{
		get
		{
			return this._Nombre_Autor;
		}
		set
		{
			if ((this._Nombre_Autor != value))
			{
				this.OnNombre_AutorChanging(value);
				this.SendPropertyChanging();
				this._Nombre_Autor = value;
				this.SendPropertyChanged("Nombre_Autor");
				this.OnNombre_AutorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo_Autor", DbType="NVarChar(14)")]
	public string Codigo_Autor
	{
		get
		{
			return this._Codigo_Autor;
		}
		set
		{
			if ((this._Codigo_Autor != value))
			{
				this.OnCodigo_AutorChanging(value);
				this.SendPropertyChanging();
				this._Codigo_Autor = value;
				this.SendPropertyChanged("Codigo_Autor");
				this.OnCodigo_AutorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Compromisos_Academicos_Autores_Compromisos", Storage="_Compromisos_Academicos", ThisKey="Id_Compromiso", OtherKey="Id_Compromiso_Academico", IsForeignKey=true)]
	public Compromisos_Academicos Compromisos_Academicos
	{
		get
		{
			return this._Compromisos_Academicos.Entity;
		}
		set
		{
			Compromisos_Academicos previousValue = this._Compromisos_Academicos.Entity;
			if (((previousValue != value) 
						|| (this._Compromisos_Academicos.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Compromisos_Academicos.Entity = null;
					previousValue.Autores_Compromisos.Remove(this);
				}
				this._Compromisos_Academicos.Entity = value;
				if ((value != null))
				{
					value.Autores_Compromisos.Add(this);
					this._Id_Compromiso = value.Id_Compromiso_Academico;
				}
				else
				{
					this._Id_Compromiso = default(int);
				}
				this.SendPropertyChanged("Compromisos_Academicos");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Entidad_Contratante")]
public partial class Entidad_Contratante : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id_Entidad_Contratante;
	
	private string _Nombre_Entidad;
	
	private System.Nullable<long> _Nit;
	
	private EntitySet<Contrato_Convenio> _Contrato_Convenio;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_Entidad_ContratanteChanging(int value);
    partial void OnId_Entidad_ContratanteChanged();
    partial void OnNombre_EntidadChanging(string value);
    partial void OnNombre_EntidadChanged();
    partial void OnNitChanging(System.Nullable<long> value);
    partial void OnNitChanged();
    #endregion
	
	public Entidad_Contratante()
	{
		this._Contrato_Convenio = new EntitySet<Contrato_Convenio>(new Action<Contrato_Convenio>(this.attach_Contrato_Convenio), new Action<Contrato_Convenio>(this.detach_Contrato_Convenio));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Entidad_Contratante", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id_Entidad_Contratante
	{
		get
		{
			return this._Id_Entidad_Contratante;
		}
		set
		{
			if ((this._Id_Entidad_Contratante != value))
			{
				this.OnId_Entidad_ContratanteChanging(value);
				this.SendPropertyChanging();
				this._Id_Entidad_Contratante = value;
				this.SendPropertyChanged("Id_Entidad_Contratante");
				this.OnId_Entidad_ContratanteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre_Entidad", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Nombre_Entidad
	{
		get
		{
			return this._Nombre_Entidad;
		}
		set
		{
			if ((this._Nombre_Entidad != value))
			{
				this.OnNombre_EntidadChanging(value);
				this.SendPropertyChanging();
				this._Nombre_Entidad = value;
				this.SendPropertyChanged("Nombre_Entidad");
				this.OnNombre_EntidadChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nit", DbType="BigInt")]
	public System.Nullable<long> Nit
	{
		get
		{
			return this._Nit;
		}
		set
		{
			if ((this._Nit != value))
			{
				this.OnNitChanging(value);
				this.SendPropertyChanging();
				this._Nit = value;
				this.SendPropertyChanged("Nit");
				this.OnNitChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entidad_Contratante_Contrato_Convenio", Storage="_Contrato_Convenio", ThisKey="Id_Entidad_Contratante", OtherKey="Entidad_Contratante")]
	public EntitySet<Contrato_Convenio> Contrato_Convenio
	{
		get
		{
			return this._Contrato_Convenio;
		}
		set
		{
			this._Contrato_Convenio.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Contrato_Convenio(Contrato_Convenio entity)
	{
		this.SendPropertyChanging();
		entity.Entidad_Contratante1 = this;
	}
	
	private void detach_Contrato_Convenio(Contrato_Convenio entity)
	{
		this.SendPropertyChanging();
		entity.Entidad_Contratante1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tipo_Producto")]
public partial class Tipo_Producto : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id_TipoProducto;
	
	private string _Tipo_Producto1;
	
	private EntityRef<Productos> _Productos;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_TipoProductoChanging(int value);
    partial void OnId_TipoProductoChanged();
    partial void OnTipo_Producto1Changing(string value);
    partial void OnTipo_Producto1Changed();
    #endregion
	
	public Tipo_Producto()
	{
		this._Productos = default(EntityRef<Productos>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_TipoProducto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id_TipoProducto
	{
		get
		{
			return this._Id_TipoProducto;
		}
		set
		{
			if ((this._Id_TipoProducto != value))
			{
				if (this._Productos.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnId_TipoProductoChanging(value);
				this.SendPropertyChanging();
				this._Id_TipoProducto = value;
				this.SendPropertyChanged("Id_TipoProducto");
				this.OnId_TipoProductoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Tipo_Producto", Storage="_Tipo_Producto1", DbType="VarChar(50)")]
	public string Tipo_Producto1
	{
		get
		{
			return this._Tipo_Producto1;
		}
		set
		{
			if ((this._Tipo_Producto1 != value))
			{
				this.OnTipo_Producto1Changing(value);
				this.SendPropertyChanging();
				this._Tipo_Producto1 = value;
				this.SendPropertyChanged("Tipo_Producto1");
				this.OnTipo_Producto1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Productos_Tipo_Producto", Storage="_Productos", ThisKey="Id_TipoProducto", OtherKey="Id_Productos", IsForeignKey=true)]
	public Productos Productos
	{
		get
		{
			return this._Productos.Entity;
		}
		set
		{
			Productos previousValue = this._Productos.Entity;
			if (((previousValue != value) 
						|| (this._Productos.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Productos.Entity = null;
					previousValue.Tipo_Producto.Remove(this);
				}
				this._Productos.Entity = value;
				if ((value != null))
				{
					value.Tipo_Producto.Add(this);
					this._Id_TipoProducto = value.Id_Productos;
				}
				else
				{
					this._Id_TipoProducto = default(int);
				}
				this.SendPropertyChanged("Productos");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contrato_Convenio")]
public partial class Contrato_Convenio : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id_Convenio_Contrato;
	
	private int _Id_Proyecto;
	
	private int _Tipo;
	
	private int _Entidad_Contratante;
	
	private string _Nombre;
	
	private string _Objeto;
	
	private System.Nullable<decimal> _Valor;
	
	private System.Nullable<decimal> _Valor_Contratado;
	
	private System.Nullable<long> _Valor_Liquidado;
	
	private System.Nullable<System.DateTime> _Fecha_Suscripción;
	
	private System.Nullable<System.DateTime> _Fecha_Inicio;
	
	private System.Nullable<System.DateTime> _Fecha_Terminación;
	
	private string _Archivo_Pdf;
	
	private int _Estado;
	
	private string _Carta_Solicitud_Propuesta;
	
	private string _Terminos_referencia;
	
	private string _Estudios_Previos;
	
	private string _Certificados_Disponibilida_Presupuestal;
	
	private string _Registro_Presupuestal;
	
	private EntitySet<Actas> _Actas;
	
	private EntitySet<Otrosí_Adiciones> _Otrosí_Adiciones;
	
	private EntityRef<Entidad_Contratante> _Entidad_Contratante1;
	
	private EntityRef<Proyectos> _Proyectos;
	
	private EntityRef<Tipo_Contrato_Convenio> _Tipo_Contrato_Convenio;
	
	private EntityRef<Estado_Contrato> _Estado_Contrato;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_Convenio_ContratoChanging(int value);
    partial void OnId_Convenio_ContratoChanged();
    partial void OnId_ProyectoChanging(int value);
    partial void OnId_ProyectoChanged();
    partial void OnTipoChanging(int value);
    partial void OnTipoChanged();
    partial void OnEntidad_ContratanteChanging(int value);
    partial void OnEntidad_ContratanteChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnObjetoChanging(string value);
    partial void OnObjetoChanged();
    partial void OnValorChanging(System.Nullable<decimal> value);
    partial void OnValorChanged();
    partial void OnValor_ContratadoChanging(System.Nullable<decimal> value);
    partial void OnValor_ContratadoChanged();
    partial void OnValor_LiquidadoChanging(System.Nullable<long> value);
    partial void OnValor_LiquidadoChanged();
    partial void OnFecha_SuscripciónChanging(System.Nullable<System.DateTime> value);
    partial void OnFecha_SuscripciónChanged();
    partial void OnFecha_InicioChanging(System.Nullable<System.DateTime> value);
    partial void OnFecha_InicioChanged();
    partial void OnFecha_TerminaciónChanging(System.Nullable<System.DateTime> value);
    partial void OnFecha_TerminaciónChanged();
    partial void OnArchivo_PdfChanging(string value);
    partial void OnArchivo_PdfChanged();
    partial void OnEstadoChanging(int value);
    partial void OnEstadoChanged();
    partial void OnCarta_Solicitud_PropuestaChanging(string value);
    partial void OnCarta_Solicitud_PropuestaChanged();
    partial void OnTerminos_referenciaChanging(string value);
    partial void OnTerminos_referenciaChanged();
    partial void OnEstudios_PreviosChanging(string value);
    partial void OnEstudios_PreviosChanged();
    partial void OnCertificados_Disponibilida_PresupuestalChanging(string value);
    partial void OnCertificados_Disponibilida_PresupuestalChanged();
    partial void OnRegistro_PresupuestalChanging(string value);
    partial void OnRegistro_PresupuestalChanged();
    #endregion
	
	public Contrato_Convenio()
	{
		this._Actas = new EntitySet<Actas>(new Action<Actas>(this.attach_Actas), new Action<Actas>(this.detach_Actas));
		this._Otrosí_Adiciones = new EntitySet<Otrosí_Adiciones>(new Action<Otrosí_Adiciones>(this.attach_Otrosí_Adiciones), new Action<Otrosí_Adiciones>(this.detach_Otrosí_Adiciones));
		this._Entidad_Contratante1 = default(EntityRef<Entidad_Contratante>);
		this._Proyectos = default(EntityRef<Proyectos>);
		this._Tipo_Contrato_Convenio = default(EntityRef<Tipo_Contrato_Convenio>);
		this._Estado_Contrato = default(EntityRef<Estado_Contrato>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Convenio_Contrato", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id_Convenio_Contrato
	{
		get
		{
			return this._Id_Convenio_Contrato;
		}
		set
		{
			if ((this._Id_Convenio_Contrato != value))
			{
				this.OnId_Convenio_ContratoChanging(value);
				this.SendPropertyChanging();
				this._Id_Convenio_Contrato = value;
				this.SendPropertyChanged("Id_Convenio_Contrato");
				this.OnId_Convenio_ContratoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Proyecto", DbType="Int NOT NULL")]
	public int Id_Proyecto
	{
		get
		{
			return this._Id_Proyecto;
		}
		set
		{
			if ((this._Id_Proyecto != value))
			{
				if (this._Proyectos.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnId_ProyectoChanging(value);
				this.SendPropertyChanging();
				this._Id_Proyecto = value;
				this.SendPropertyChanged("Id_Proyecto");
				this.OnId_ProyectoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="Int NOT NULL")]
	public int Tipo
	{
		get
		{
			return this._Tipo;
		}
		set
		{
			if ((this._Tipo != value))
			{
				if (this._Tipo_Contrato_Convenio.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTipoChanging(value);
				this.SendPropertyChanging();
				this._Tipo = value;
				this.SendPropertyChanged("Tipo");
				this.OnTipoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entidad_Contratante", DbType="Int NOT NULL")]
	public int Entidad_Contratante
	{
		get
		{
			return this._Entidad_Contratante;
		}
		set
		{
			if ((this._Entidad_Contratante != value))
			{
				if (this._Entidad_Contratante1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEntidad_ContratanteChanging(value);
				this.SendPropertyChanging();
				this._Entidad_Contratante = value;
				this.SendPropertyChanged("Entidad_Contratante");
				this.OnEntidad_ContratanteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(MAX)")]
	public string Nombre
	{
		get
		{
			return this._Nombre;
		}
		set
		{
			if ((this._Nombre != value))
			{
				this.OnNombreChanging(value);
				this.SendPropertyChanging();
				this._Nombre = value;
				this.SendPropertyChanged("Nombre");
				this.OnNombreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Objeto", DbType="VarChar(MAX)")]
	public string Objeto
	{
		get
		{
			return this._Objeto;
		}
		set
		{
			if ((this._Objeto != value))
			{
				this.OnObjetoChanging(value);
				this.SendPropertyChanging();
				this._Objeto = value;
				this.SendPropertyChanged("Objeto");
				this.OnObjetoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="Money")]
	public System.Nullable<decimal> Valor
	{
		get
		{
			return this._Valor;
		}
		set
		{
			if ((this._Valor != value))
			{
				this.OnValorChanging(value);
				this.SendPropertyChanging();
				this._Valor = value;
				this.SendPropertyChanged("Valor");
				this.OnValorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor_Contratado", DbType="Money")]
	public System.Nullable<decimal> Valor_Contratado
	{
		get
		{
			return this._Valor_Contratado;
		}
		set
		{
			if ((this._Valor_Contratado != value))
			{
				this.OnValor_ContratadoChanging(value);
				this.SendPropertyChanging();
				this._Valor_Contratado = value;
				this.SendPropertyChanged("Valor_Contratado");
				this.OnValor_ContratadoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor_Liquidado", DbType="BigInt")]
	public System.Nullable<long> Valor_Liquidado
	{
		get
		{
			return this._Valor_Liquidado;
		}
		set
		{
			if ((this._Valor_Liquidado != value))
			{
				this.OnValor_LiquidadoChanging(value);
				this.SendPropertyChanging();
				this._Valor_Liquidado = value;
				this.SendPropertyChanged("Valor_Liquidado");
				this.OnValor_LiquidadoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_Suscripción", DbType="Date")]
	public System.Nullable<System.DateTime> Fecha_Suscripción
	{
		get
		{
			return this._Fecha_Suscripción;
		}
		set
		{
			if ((this._Fecha_Suscripción != value))
			{
				this.OnFecha_SuscripciónChanging(value);
				this.SendPropertyChanging();
				this._Fecha_Suscripción = value;
				this.SendPropertyChanged("Fecha_Suscripción");
				this.OnFecha_SuscripciónChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_Inicio", DbType="Date")]
	public System.Nullable<System.DateTime> Fecha_Inicio
	{
		get
		{
			return this._Fecha_Inicio;
		}
		set
		{
			if ((this._Fecha_Inicio != value))
			{
				this.OnFecha_InicioChanging(value);
				this.SendPropertyChanging();
				this._Fecha_Inicio = value;
				this.SendPropertyChanged("Fecha_Inicio");
				this.OnFecha_InicioChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_Terminación", DbType="Date")]
	public System.Nullable<System.DateTime> Fecha_Terminación
	{
		get
		{
			return this._Fecha_Terminación;
		}
		set
		{
			if ((this._Fecha_Terminación != value))
			{
				this.OnFecha_TerminaciónChanging(value);
				this.SendPropertyChanging();
				this._Fecha_Terminación = value;
				this.SendPropertyChanged("Fecha_Terminación");
				this.OnFecha_TerminaciónChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archivo_Pdf", DbType="VarChar(MAX)")]
	public string Archivo_Pdf
	{
		get
		{
			return this._Archivo_Pdf;
		}
		set
		{
			if ((this._Archivo_Pdf != value))
			{
				this.OnArchivo_PdfChanging(value);
				this.SendPropertyChanging();
				this._Archivo_Pdf = value;
				this.SendPropertyChanged("Archivo_Pdf");
				this.OnArchivo_PdfChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int NOT NULL")]
	public int Estado
	{
		get
		{
			return this._Estado;
		}
		set
		{
			if ((this._Estado != value))
			{
				if (this._Estado_Contrato.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEstadoChanging(value);
				this.SendPropertyChanging();
				this._Estado = value;
				this.SendPropertyChanged("Estado");
				this.OnEstadoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Carta_Solicitud_Propuesta", DbType="VarChar(MAX)")]
	public string Carta_Solicitud_Propuesta
	{
		get
		{
			return this._Carta_Solicitud_Propuesta;
		}
		set
		{
			if ((this._Carta_Solicitud_Propuesta != value))
			{
				this.OnCarta_Solicitud_PropuestaChanging(value);
				this.SendPropertyChanging();
				this._Carta_Solicitud_Propuesta = value;
				this.SendPropertyChanged("Carta_Solicitud_Propuesta");
				this.OnCarta_Solicitud_PropuestaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Terminos_referencia", DbType="VarChar(MAX)")]
	public string Terminos_referencia
	{
		get
		{
			return this._Terminos_referencia;
		}
		set
		{
			if ((this._Terminos_referencia != value))
			{
				this.OnTerminos_referenciaChanging(value);
				this.SendPropertyChanging();
				this._Terminos_referencia = value;
				this.SendPropertyChanged("Terminos_referencia");
				this.OnTerminos_referenciaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estudios_Previos", DbType="VarChar(MAX)")]
	public string Estudios_Previos
	{
		get
		{
			return this._Estudios_Previos;
		}
		set
		{
			if ((this._Estudios_Previos != value))
			{
				this.OnEstudios_PreviosChanging(value);
				this.SendPropertyChanging();
				this._Estudios_Previos = value;
				this.SendPropertyChanged("Estudios_Previos");
				this.OnEstudios_PreviosChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Certificados_Disponibilida_Presupuestal", DbType="VarChar(MAX)")]
	public string Certificados_Disponibilida_Presupuestal
	{
		get
		{
			return this._Certificados_Disponibilida_Presupuestal;
		}
		set
		{
			if ((this._Certificados_Disponibilida_Presupuestal != value))
			{
				this.OnCertificados_Disponibilida_PresupuestalChanging(value);
				this.SendPropertyChanging();
				this._Certificados_Disponibilida_Presupuestal = value;
				this.SendPropertyChanged("Certificados_Disponibilida_Presupuestal");
				this.OnCertificados_Disponibilida_PresupuestalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Registro_Presupuestal", DbType="VarChar(MAX)")]
	public string Registro_Presupuestal
	{
		get
		{
			return this._Registro_Presupuestal;
		}
		set
		{
			if ((this._Registro_Presupuestal != value))
			{
				this.OnRegistro_PresupuestalChanging(value);
				this.SendPropertyChanging();
				this._Registro_Presupuestal = value;
				this.SendPropertyChanged("Registro_Presupuestal");
				this.OnRegistro_PresupuestalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contrato_Convenio_Actas", Storage="_Actas", ThisKey="Id_Convenio_Contrato", OtherKey="Nombre_Contrato_Convenio")]
	public EntitySet<Actas> Actas
	{
		get
		{
			return this._Actas;
		}
		set
		{
			this._Actas.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contrato_Convenio_Otrosí_Adiciones", Storage="_Otrosí_Adiciones", ThisKey="Id_Convenio_Contrato", OtherKey="Convenio_Contrato")]
	public EntitySet<Otrosí_Adiciones> Otrosí_Adiciones
	{
		get
		{
			return this._Otrosí_Adiciones;
		}
		set
		{
			this._Otrosí_Adiciones.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entidad_Contratante_Contrato_Convenio", Storage="_Entidad_Contratante1", ThisKey="Entidad_Contratante", OtherKey="Id_Entidad_Contratante", IsForeignKey=true)]
	public Entidad_Contratante Entidad_Contratante1
	{
		get
		{
			return this._Entidad_Contratante1.Entity;
		}
		set
		{
			Entidad_Contratante previousValue = this._Entidad_Contratante1.Entity;
			if (((previousValue != value) 
						|| (this._Entidad_Contratante1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Entidad_Contratante1.Entity = null;
					previousValue.Contrato_Convenio.Remove(this);
				}
				this._Entidad_Contratante1.Entity = value;
				if ((value != null))
				{
					value.Contrato_Convenio.Add(this);
					this._Entidad_Contratante = value.Id_Entidad_Contratante;
				}
				else
				{
					this._Entidad_Contratante = default(int);
				}
				this.SendPropertyChanged("Entidad_Contratante1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proyectos_Contrato_Convenio", Storage="_Proyectos", ThisKey="Id_Proyecto", OtherKey="Id_Proyecto", IsForeignKey=true)]
	public Proyectos Proyectos
	{
		get
		{
			return this._Proyectos.Entity;
		}
		set
		{
			Proyectos previousValue = this._Proyectos.Entity;
			if (((previousValue != value) 
						|| (this._Proyectos.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Proyectos.Entity = null;
					previousValue.Contrato_Convenio.Remove(this);
				}
				this._Proyectos.Entity = value;
				if ((value != null))
				{
					value.Contrato_Convenio.Add(this);
					this._Id_Proyecto = value.Id_Proyecto;
				}
				else
				{
					this._Id_Proyecto = default(int);
				}
				this.SendPropertyChanged("Proyectos");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Contrato_Convenio_Contrato_Convenio", Storage="_Tipo_Contrato_Convenio", ThisKey="Tipo", OtherKey="Id_Tipo_Convenio_Contrato", IsForeignKey=true)]
	public Tipo_Contrato_Convenio Tipo_Contrato_Convenio
	{
		get
		{
			return this._Tipo_Contrato_Convenio.Entity;
		}
		set
		{
			Tipo_Contrato_Convenio previousValue = this._Tipo_Contrato_Convenio.Entity;
			if (((previousValue != value) 
						|| (this._Tipo_Contrato_Convenio.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Tipo_Contrato_Convenio.Entity = null;
					previousValue.Contrato_Convenio.Remove(this);
				}
				this._Tipo_Contrato_Convenio.Entity = value;
				if ((value != null))
				{
					value.Contrato_Convenio.Add(this);
					this._Tipo = value.Id_Tipo_Convenio_Contrato;
				}
				else
				{
					this._Tipo = default(int);
				}
				this.SendPropertyChanged("Tipo_Contrato_Convenio");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Contrato_Contrato_Convenio", Storage="_Estado_Contrato", ThisKey="Estado", OtherKey="Id_Estado_Contrato", IsForeignKey=true)]
	public Estado_Contrato Estado_Contrato
	{
		get
		{
			return this._Estado_Contrato.Entity;
		}
		set
		{
			Estado_Contrato previousValue = this._Estado_Contrato.Entity;
			if (((previousValue != value) 
						|| (this._Estado_Contrato.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Estado_Contrato.Entity = null;
					previousValue.Contrato_Convenio.Remove(this);
				}
				this._Estado_Contrato.Entity = value;
				if ((value != null))
				{
					value.Contrato_Convenio.Add(this);
					this._Estado = value.Id_Estado_Contrato;
				}
				else
				{
					this._Estado = default(int);
				}
				this.SendPropertyChanged("Estado_Contrato");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Actas(Actas entity)
	{
		this.SendPropertyChanging();
		entity.Contrato_Convenio = this;
	}
	
	private void detach_Actas(Actas entity)
	{
		this.SendPropertyChanging();
		entity.Contrato_Convenio = null;
	}
	
	private void attach_Otrosí_Adiciones(Otrosí_Adiciones entity)
	{
		this.SendPropertyChanging();
		entity.Contrato_Convenio = this;
	}
	
	private void detach_Otrosí_Adiciones(Otrosí_Adiciones entity)
	{
		this.SendPropertyChanging();
		entity.Contrato_Convenio = null;
	}
}
#pragma warning restore 1591
